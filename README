# -*- org -*-
#+STARTUP: showall

DLLitePlugin
============

This file provides some hints how to install and run the dllite plugin
for dlvhex.

* You want to build and install from source
  dlvhex uses the standard

  $ ./configure

  approach for installation.

This is dlvhex-dlliteplugin, a plugin for `dlvhex'.
** Dependencies

*** boost
    If you have compiled boost by yourself, you have to tell the
    configure script where you have installed it with

    $ ./configure --with-boost=/path/to/boost-prefix

*** owlcpp
    This library is necessary for evaluation of DL-programs using support sets 
    (option --supportsets), as well as the repair answer set computation 
    (option --repair). To link the library, use one of the following options:

    1.
       ./configure --with-owlcpp=PATH
    where PATH points to the main directory of an owlcpp build.
    In this case, make sure that owlcpp and the core are built
    using the same version of boost. Moreover, make sure that
    owlcpp exports all symbols such that they can be used from
    shared libraries; this can be achieved by
    editing the file jamroot.jam in the owlcpp directory such that
    "-fvisibility=hidden" is replaced by "-fvisibility=default" and
    "-fvisibility-inlines-hidden" is removed.
    
    2.
       ./configure --with-owlcpp=auto
   to download and build owlcpp and its dependencies automatically
   as part of the dlvhex build process (internet connection required).

   If dlvhex is built without --with-owlcpp, no support for ontologies
   will be compiled into the binary and --repair is not available.

