% collect all customers into customer predicate
customer(X):- isIn(X,Z), not &cDL["t.owl",a,b,c,d,"-Customer"](X).

% collect all drivers into driver predicate
driver(X):-isIn(X,Z), not customer(X), goTo(X,Y).

% if a customer and a driver are in the same region, then assign them to one another unless the omission condition is satisfied
drives(X,Y):-driver(X),customer(Y),isIn(X,Z),isIn(Y,Z), not omit(X,Y).

% if a customer is assigned to an Edriver and the former needs to the region, where the latter does not work, then omit the assignment
 omit(X,Y):-needsTo(Y,Z1), drives(X,Y), &cDL["t.owl",omitcp,omitcm,omitrp,omitrm,"EDriver"](X),
 &rDL["t.owl",cp,cm,rp,rm,"notworksIn"](X,Z1).

% each customer must be assigned to at least one driver
 ok(Y):- customer(Y), drives(X,Y).
 fail:-customer(Y), not ok(Y).
 :-fail.

% extention of ontological predicates
omitcp("Driver",X):-driver(X).
