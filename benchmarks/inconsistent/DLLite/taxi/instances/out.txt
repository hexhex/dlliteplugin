Logger warning: deactivated ERROR level
 1 now checking plugin ABI version for ../../../../../src/libdlvhexplugin-dllite
 1 now calling plugin import function for ../../../../../src/libdlvhexplugin-dllite
 1 plugin import function returned 0x7f5b4d7b8ea0
 1 now checking plugin ABI version for /usr/local/lib/dlvhex/plugins/libdlvhexplugin-hexagentplugin
 1 now calling plugin import function for /usr/local/lib/dlvhex/plugins/libdlvhexplugin-hexagentplugin
 1 plugin import function returned 0x7f5b4cee2860
 1 selectLoadedPlugins: already loaded: {dlvhex-aggregateplugin[internal],dlvhex-existsplugin[internal],dlvhex-functionplugin[internal],dlvhex-higherorderplugin[internal],dlvhex-manualevalheuristicsplugin[internal],dlvhex-queryplugin[internal],dlvhex-strongnegationplugin[internal],dlvhex-weakconstraintplugin[internal]}
 1 processing options for plugin dlvhex-manualevalheuristicsplugin[internal]
 1 currently have <--repair=simple.owl,--repdel=C,A>
 1 processing options for plugin dlvhex-queryplugin[internal]
 1 currently have <--repair=simple.owl,--repdel=C,A>
 1 processing options for plugin dlvhex-aggregateplugin[internal]
 1 currently have <--repair=simple.owl,--repdel=C,A>
 1 processing options for plugin dlvhex-strongnegationplugin[internal]
 1 currently have <--repair=simple.owl,--repdel=C,A>
 1 processing options for plugin dlvhex-higherorderplugin[internal]
 1 currently have <--repair=simple.owl,--repdel=C,A>
 1 processing options for plugin dlvhex-weakconstraintplugin[internal]
 1 currently have <--repair=simple.owl,--repdel=C,A>
 1 processing options for plugin dlvhex-existsplugin[internal]
 1 currently have <--repair=simple.owl,--repdel=C,A>
 1 processing options for plugin dlvhex-functionplugin[internal]
 1 currently have <--repair=simple.owl,--repdel=C,A>
 1 processing options for plugin dlvhex-dlliteplugin
 1 currently have <--repair=simple.owl,--repdel=C,A>
 1 predicates for deletion are 
 1 C
 1 A
 1 processing options for plugin hexagentplugin
 1 currently have <>
 1 adding plugin atoms from plugin dlvhex-manualevalheuristicsplugin[internal]
 1 adding plugin atoms from plugin dlvhex-queryplugin[internal]
 1 adding plugin atoms from plugin dlvhex-aggregateplugin[internal]
 1 Adding aggregate external atoms with an input arity of up to 0
 1   got plugin atom max0
 1   got plugin atom min0
 1   got plugin atom sum0
 1   got plugin atom times0
 1   got plugin atom avg0
 1   got plugin atom count0
 1 adding plugin atoms from plugin dlvhex-strongnegationplugin[internal]
 1 adding plugin atoms from plugin dlvhex-higherorderplugin[internal]
 1 adding plugin atoms from plugin dlvhex-weakconstraintplugin[internal]
 1 adding plugin atoms from plugin dlvhex-existsplugin[internal]
 1 Adding exists atom with an input arity of up to 1
 1   got plugin atom exists0
 1   got plugin atom exists1
 1 adding plugin atoms from plugin dlvhex-functionplugin[internal]
 1 Adding functional atom with an input arity of up to 1
 1   got plugin atom functionCompose
 1   got plugin atom functionDecompose0
 1   got plugin atom functionDecompose1
 1   got plugin atom isFunctionTerm
 1   got plugin atom getArity
 1   got plugin atom functionDecompose
 1 adding plugin atoms from plugin dlvhex-dlliteplugin
 1 Constructor of cDL plugin is started
 1 Constructor of rDL plugin is started
 1 Constructor of consDL plugin is started
 1 Constructor of inconsDL plugin is started
 1   got plugin atom cDL
 1   got plugin atom rDL
 1   got plugin atom consDL
 1   got plugin atom inconsDL
 1 adding plugin atoms from plugin hexagentplugin
 1   got plugin atom distance
 1   got plugin atom on_top_of
 1   got plugin atom on_top_all
 1   got plugin atom on_top_mass
 1   got plugin atom next
 1   got plugin atom shootable
 1   got plugin atom firstabove
 1   got plugin atom firstbelow
 1   got plugin atom canpush
 1   got plugin atom clearsky
 1   got plugin atom stability
 1   got plugin atom bestwhite
 1 Before starting repair model generator
 1 Plugin provides custom model generator factory
 1 debugFilePrefix='dbg_simple.hex'
 1 ManualEvalHeuristicsPlugin::createParserModules()
 1 QueryPlugin::createParserModules()
 1 StrongNegationPlugin::createParserModules()
 1 HigherOrderPlugin::createParserModules()
 1 ExistsPlugin::createParserModules()
 1 DLLitePlugin::createParserModules(ProgramCtx& ctx)
 1 stored term Term(sub) which got ID(0x10000000,  30 term constant)
 1 stored term Term(op) which got ID(0x10000000,  31 term constant)
 1 stored term Term(conf) which got ID(0x10000000,  32 term constant)
 1 stored term Term(funct) which got ID(0x10000000,  33 term constant)
 1 stored term Term(inv) which got ID(0x10000000,  34 term constant)
 1 stored term Term(confref) which got ID(0x10000000,  35 term constant)
 1 stored term Term(X) which got ID(0x12000000,  36 term variable)
 1 stored term Term(Y) which got ID(0x12000000,  37 term variable)
 1 stored term Term(Z) which got ID(0x12000000,  38 term variable)
 1 gACS getAuxiliaryConstantSymbol for o ID(0x00000000,   0 atom ordinary_ground)
 1 gACS created symbol 'aux_o_0_0'
 1 gACS PM::aP/0xe88180 adding predicate ID(0x10800000,  39 term constant), knownAddresses was 0
 1 gACS returning id ID(0x10800000,  39 term constant) for aux symbol aux_o_0_0
 1  reset edb 
 1 starting to parse
 1 checking groundness of tuple <ID(0x10000000,  40 term constant),ID(0x10000000,  41 term constant)>
 1 stored oatom OrdinaryAtom(0,'c("a")',[ID(0x10000000,  40 term constant),ID(0x10000000,  41 term constant)]) which got ID(0x00000000,   0 atom ordinary_ground)
 1 stored atom OrdinaryAtom(0,'c("a")',[ID(0x10000000,  40 term constant),ID(0x10000000,  41 term constant)]) which got id ID(0x00000000,   0 atom ordinary_ground)
 1 added fact with id ID(0x00000000,   0 atom ordinary_ground) to edb
 1 storing external atom ExternalAtom(&ID(0x10000000,  14 term constant)[[ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  47 term constant)]]([ID(0x12000000,  36 term variable)]) pluginAtom=null auxInputPredicate=ID_FAIL
 1 external atom ExternalAtom(&ID(0x10000000,  14 term constant)[[ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  47 term constant)]]([ID(0x12000000,  36 term variable)]) pluginAtom=null auxInputPredicate=ID_FAIL got id ID(0x06000000,   0 atom external)
 1 checking groundness of tuple <ID(0x10000000,  40 term constant),ID(0x12000000,  36 term variable)>
 1 stored oatom OrdinaryAtom(1000000,'c(X)',[ID(0x10000000,  40 term constant),ID(0x12000000,  36 term variable)]) which got ID(0x01000000,   0 atom ordinary_nonground)
 1 stored atom OrdinaryAtom(1000000,'c(X)',[ID(0x10000000,  40 term constant),ID(0x12000000,  36 term variable)]) which got id ID(0x01000000,   0 atom ordinary_nonground)
 1 created constraint Rule([] <- [ID(0x26000000,   0 literal external),ID(0x21000000,   0 literal ordinary_nonground)]) with id ID(0x31080000,   0 rule constraint)
 1 added rule with id ID(0x31080000,   0 rule constraint) to idb
 1 parsing returned with success=1
 1 aEAwPA = associateExtAtomsWithPluginAtoms
 1 aEAwPA = associateExtAtomsWithPluginAtoms
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src '&cDL["simple.owl",cp,cn,rp,rn,"A"](X),c(X)'
 1 rFS  safevars ''
 1 rFS checking literal &cDL["simple.owl",cp,cn,rp,rn,"A"](X)
 1 rFS  -> checking input safety
 1 rFS  -> inputs safe, adding outputs as safe
 1 rFS  -> transferring
 1 rFS checking literal c(X)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt '&cDL["simple.owl",cp,cn,rp,rn,"A"](X),c(X)'
 1 rFS  -> newsafevars 'X'
 1 LiberalSafetyChecker::createDependencyGraph
 1 Computing strongly connected components in attribute dependency graph
 1 0 attributes depend cyclically on external attributes
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#o1 is externally acyclic
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#o1 is domain-expansion safe
 1 Attribute c#1 is externally acyclic
 1 Attribute c#1 is domain-expansion safe
 1 Variable r0/X is bounded
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i1 is externally acyclic
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i1 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#o1
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i2 is externally acyclic
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i2 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#o1
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i3 is externally acyclic
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i3 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#o1
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i4 is externally acyclic
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i4 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#o1
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i5 is externally acyclic
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i5 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#o1
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i6 is externally acyclic
 1 Attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#i6 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["simple.owl",cp,cn,rp,rn,"A"]#o1
 1 Constructing optimized rule
 1 Checking safety of optimized rule
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'c(X)'
 1 rFS  safevars ''
 1 rFS checking literal c(X)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'c(X)'
 1 rFS  -> newsafevars 'X'
 1 Checking variables of optimized rule
 1 Optimized rule is safe
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 87 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 0 (it should be 1)
 1 Domain Expansion Safety: 1 (8 out of 8 attributes are safe)
 1 =createNodesAndIntraRuleDependencies
 1 cNaIRDfR/0 ENTRY
 1 cNaIRDfR/0 =createNodesAndIntraRuleDependenciesForRule for rule ID(0x31080000,   0 rule constraint) :- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X).
 1 cNaIRDfR/0 creating node for ID ID(0x31080000,   0 rule constraint)
 1 cNaIRDfR/0 adding body literal ID(0x26000000,   0 literal external)
 1 cNaIRDfR/0 adding external atom &cDL["simple.owl",cp,cn,rp,rn,"A"](X)  (aux=ID_FAIL) with id ID(0x06000000,   0 atom external)
 1 cNaIRDfR/0 creating node for ID ID(0x06000000,   0 atom external)
 1 cNaIRDfR/0 cARiR =createAuxiliaryRuleIfRequired for body [ID(0x26000000,   0 literal external),ID(0x21000000,   0 literal ordinary_nonground)] = &cDL["simple.owl",cp,cn,rp,rn,"A"](X),c(X)
 1 cNaIRDfR/0 storing dependency: ID(0x31080000,   0 rule constraint) -> ID(0x06000000,   0 atom external) with monotonic=1, naf=0
 1 cNaIRDfR/0 adding body literal ID(0x21000000,   0 literal ordinary_nonground)
 1 cNaIRDfR/0 EXIT
 1 =createExternalPredicateInputDependencies
 1 itext0 =ID(0x06000000,   0 atom external)
 1 itext0 checking external atom &cDL["simple.owl",cp,cn,rp,rn,"A"](X)  (aux=ID_FAIL)
 1 itext0 at1 = checking predicate input ID(0x10000000,  43 term constant) at position 1
 1 itext0 at1 PM::aP/0xea8940 adding predicate ID(0x10000000,  43 term constant), knownAddresses was 0
 1 itext0 at1 cEPIDfI =createExternalPredicateInputDependenciesForInput (finding all rules with heads that use predicate ID(0x10000000,  43 term constant))
 1 itext0 at2 = checking predicate input ID(0x10000000,  44 term constant) at position 2
 1 itext0 at2 PM::aP/0xea8940 adding predicate ID(0x10000000,  44 term constant), knownAddresses was 0
 1 itext0 at2 cEPIDfI =createExternalPredicateInputDependenciesForInput (finding all rules with heads that use predicate ID(0x10000000,  44 term constant))
 1 itext0 at3 = checking predicate input ID(0x10000000,  45 term constant) at position 3
 1 itext0 at3 PM::aP/0xea8940 adding predicate ID(0x10000000,  45 term constant), knownAddresses was 0
 1 itext0 at3 cEPIDfI =createExternalPredicateInputDependenciesForInput (finding all rules with heads that use predicate ID(0x10000000,  45 term constant))
 1 itext0 at4 = checking predicate input ID(0x10000000,  46 term constant) at position 4
 1 itext0 at4 PM::aP/0xea8940 adding predicate ID(0x10000000,  46 term constant), knownAddresses was 0
 1 itext0 at4 cEPIDfI =createExternalPredicateInputDependenciesForInput (finding all rules with heads that use predicate ID(0x10000000,  46 term constant))
 1 =createHeadHeadUnifyingDependencies
 1 =createHeadBodyUnifyingDependencies
 1 Building component graph
 1 created component node 0xeabe70 for scc 0 with depgraph nodes <1>
 1 checking whether eatom ID(0x06000000,   0 atom external) is monotonic
 1   eatom ID(0x06000000,   0 atom external) is monotonic
 1 cNNEiC checking predecessor edges of node 1
 1 calculateFixedDomain
 1 calculateStratificationInfo
 1 -> outerEatoms <ID(0x06000000,   0 atom external)>
 1 -> innerRules <>
 1 -> innerConstraints <>
 1 -> innerEatoms <>
 1 -> disjunctiveHeads=0 negativeDependencyBetweenRules=0 innerEatomsNonmonotonic=0 outerEatomsNonmonotonic=0 componentIsMonotonic=1
 1 created component node 0xeabff0 for scc 1 with depgraph nodes <0>
 1 cNNEiC checking predecessor edges of node 0
 1 calculateFixedDomain
 1 checking fixed domain of variable X
 1 checking unifications of body literal c(X) with component rule heads
 1 variable safe!
 1 Variable ID(0x12000000,  36 term variable) is strongly safe in rule ID(0x31080000,   0 rule constraint) (0xeac050)
 1 calculateStratificationInfo
 1 -> outerEatoms <>
 1 -> innerRules <>
 1 -> innerConstraints <ID(0x31080000,   0 rule constraint)>
 1 -> innerEatoms <>
 1 -> disjunctiveHeads=0 negativeDependencyBetweenRules=0 innerEatomsNonmonotonic=0 outerEatomsNonmonotonic=0 componentIsMonotonic=1
 1 found dependency from SCC 1 to SCC 0
 1 Building component graph
 1 invoking build() on eval heuristic
 1 = EvalGraphBuilder::createEvalUnit(<0xeac700,0xeac880>,<>)
 1  compo &cDL["simple.owl",cp,cn,rp,rn,"A"](X)
 1  compc :- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X).
 1 cC = collapseComponents(<0xeac700,0xeac880>,<>)
 1 cC created component node 0xeacfb0 for collapsed component
 1 cC cCCI = computeCollapsedComponentInfos(<0xeac700,0xeac880>,<>,.,.,.)
 1 cC cCCI original 0xeac700: (outgoing)
 1 cC cCCI original 0xeac880: (outgoing)
 1 cC cCCI    internal dependency (to 0xeac700)
 1 cC cCCI original 0xeac700: (incoming)
 1 cC cCCI original 0xeac880: (incoming)
 1 cC cCCI calculateStratificationInfo
 1 created unit 0 for new comp 0xeacfb0
 1 configuring custom model generator factory for eval unit 0
 1 getCustomModelGenerator factory is started
 1 adding domain predicates: rewriting rule :- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X). to :- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X). (for IDB) and domain-exploration rule :- c(X).
 1 cEAGR processing rule with external atom(s): :- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X). (rid ID(0x31080000,   0 rule constraint)r Rule([] <- [ID(0x26000000,   0 literal external),ID(0x21000000,   0 literal ordinary_nonground)]))
 1 cEAGR processing external atom &cDL["simple.owl",cp,cn,rp,rn,"A"](X) (lit ID(0x26000000,   0 literal external) eatom &cDL["simple.owl",cp,cn,rp,rn,"A"](X)  (aux=ID_FAIL))
 1 cEAGR    gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 cEAGR    gACS created symbol 'aux_r_10000000_e'
 1 cEAGR    gACS PM::aP/0xe88180 adding predicate ID(0x10c00000,  48 term constant), knownAddresses was 0
 1 cEAGR    gACS returning id ID(0x10c00000,  48 term constant) for aux symbol aux_r_10000000_e
 1 cEAGR    gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 cEAGR    gACS created symbol 'aux_n_10000000_e'
 1 cEAGR    gACS PM::aP/0xe88180 adding predicate ID(0x10c00000,  49 term constant), knownAddresses was 0
 1 cEAGR    gACS returning id ID(0x10c00000,  49 term constant) for aux symbol aux_n_10000000_e
 1 cEAGR    PM::aP/0xead2e0 adding predicate ID(0x10c00000,  48 term constant), knownAddresses was 0
 1 cEAGR    PM::aP/0xead350 adding predicate ID(0x10c00000,  49 term constant), knownAddresses was 0
 1 cEAGR    found set of variables: X
 1 cEAGR    stored oatom OrdinaryAtom(1c00000,'aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X)',[ID(0x10c00000,  48 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  47 term constant),ID(0x12000000,  36 term variable)]) which got ID(0x01c00000,   1 atom ordinary_nonground)
 1 cEAGR    stored oatom OrdinaryAtom(1c00000,'aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X)',[ID(0x10c00000,  49 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  47 term constant),ID(0x12000000,  36 term variable)]) which got ID(0x01c00000,   2 atom ordinary_nonground)
 1 cEAGR    registered posreplacement aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) and negreplacement aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X)
 1 cEAGR    stored guessingrule aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) :- c(X). which got id ID(0x30900000,   3 rule regular)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 97 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 6 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 96 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 5 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 96 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 5 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 95 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 4 (it should be 1)
 1 rewriting rule :- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X). from Rule([] <- [ID(0x26000000,   0 literal external),ID(0x21000000,   0 literal ordinary_nonground)]) with id ID(0x31080000,   0 rule constraint) to auxiliary predicates
 1 rewriting external atom &cDL["simple.owl",cp,cn,rp,rn,"A"](X)  (aux=ID_FAIL) literal with id ID(0x26000000,   0 literal external)
 1 gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 gACS found ID(0x10c00000,  48 term constant)
 1 adding replacement atom ID(0x01c00000,   1 atom ordinary_nonground) as literal
 1 adding original literal ID(0x21000000,   0 literal ordinary_nonground)
 1 rewritten rule :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X), c(X). from Rule([] <- [ID(0x21c00000,   1 literal ordinary_nonground),ID(0x21000000,   0 literal ordinary_nonground)]) got id ID(0x31880000,   4 rule constraint)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 94 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 3 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 93 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 2 (it should be 1)
 1 RepairModelGeneratorFactory(): outer Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
inner Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
gidb={
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) :- c(X).
}
idb={
:- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X).
}
xidb={
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X), c(X).
}

 1 Destructing component graph 0xea4270
 1 created virtual final unit ufinal = 1
 1 adding dependency from ufinal to unit 0 join order 0
 1 setting up program ctx for plugin dlvhex-manualevalheuristicsplugin[internal]
 1 setting up program ctx for plugin dlvhex-queryplugin[internal]
 1 setting up program ctx for plugin dlvhex-aggregateplugin[internal]
 1 setting up program ctx for plugin dlvhex-strongnegationplugin[internal]
 1 setting up program ctx for plugin dlvhex-higherorderplugin[internal]
 1 setting up program ctx for plugin dlvhex-weakconstraintplugin[internal]
 1 setting up program ctx for plugin dlvhex-existsplugin[internal]
 1 setting up program ctx for plugin dlvhex-functionplugin[internal]
 1 setting up program ctx for plugin dlvhex-dlliteplugin
 1 DLLitePlugin::setupProgramCtx(ProgramCtx& ctx)
 1 Registry was already previously set
 1 IDs have already been prepared
 1 Constructing classification program
 1 stored term Term(X2) which got ID(0x12000000,  50 term variable)
 1 stored term Term(Y2) which got ID(0x12000000,  51 term variable)
 1 stored term Term(Y1) which got ID(0x12000000,  52 term variable)
 1 stored oatom OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) which got ID(0x01000000,   3 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]) which got ID(0x01000000,   4 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]) which got ID(0x01000000,   5 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]) which got ID(0x01000000,   6 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)]) which got ID(0x01000000,   7 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]) which got ID(0x01000000,   8 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]) which got ID(0x01000000,   9 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) which got ID(0x01000000,  10 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]) which got ID(0x01000000,  11 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]) which got ID(0x01000000,  12 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) which got ID(0x01000000,  13 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) which got ID(0x01000000,  14 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) which got ID(0x01000000,  15 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'inv(X,Y1)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]) which got ID(0x01000000,  16 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'inv(Y,X)',[ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) which got ID(0x01000000,  17 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'confref(X)',[ID(0x10000000,  35 term constant),ID(0x12000000,  36 term variable)]) which got ID(0x01000000,  18 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)]) which got ID(0x01000000,  19 atom ordinary_nonground)
 1 Constructed classification program
 1 CLP: sub(X,Z) :- sub(X,Y), sub(Y,Z).

 1 CLP: sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y).

 1 CLP: conf(X,Y1) :- sub(X,Y), op(Y,Y1).

 1 CLP: conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1).

 1 CLP: confref(X) :- conf(X,Y), inv(X,Y).

 1 CLP: op(Y,X) :- op(X,Y).

 1 CLP: inv(Y,X) :- inv(X,Y).

 1 setting up program ctx for plugin hexagentplugin
 1 EvalUnitModels()@0x7fff199546e0
 1 EvalUnitModels()@0x7fff19954680
 1 EvalUnitModels(const EvalUnitModels&)@0xeb8150 from 0x7fff19954680
 1 EvalUnitModels(const EvalUnitModels&)@0xeb8160 from 0x7fff19954680
 1 EvalUnitModels(const EvalUnitModels&)@0xeb8170 from 0x7fff19954680
 1 ~EvalUnitModels()@0x7fff19954680
 1 ~EvalUnitModels()@0x7fff199546e0
 1 initializing mbp for unit 0
 1 initializing mbp for unit 1
 1 requesting imodel
 1 =OnlineModelBuilder<...>::getNextIModel(1)
 1 uprops: (no ModelGeneratorFactory)
 1 mbprops: currentmg =      null, needInput = 1, orefcount = 0, imodel =     unset, currentisuccessor = unset
 1 =OnlineModelBuilder<...>::getNextOModel(0):
 1 uprops = outer Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
inner Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
gidb={
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) :- c(X).
}
idb={
:- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X).
}
xidb={
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X), c(X).
}

 1 mbprops = currentmg =      null, needInput = 0, orefcount = 0, imodel =     unset, currentisuccessor = unset
 1 =OnlineModelBuilder<...>::getNextIModel(0)
 1 uprops: outer Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
inner Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
gidb={
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) :- c(X).
}
idb={
:- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X).
}
xidb={
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X), c(X).
}

 1 mbprops: currentmg =      null, needInput = 0, orefcount = 0, imodel =     unset, currentisuccessor = unset
 1 unit needs no input
 1 running debug checks
 1 =OnlineModelBuilder<...>::advanceOModelForIModel(0)
 1 imodel has properties dummy interpretation=null
 1 =createNextModel(0)
 1 sEA  = ExternalAtomMask::setEAtom for &cDL["simple.owl",cp,cn,rp,rn,"A"](X)  (aux=ID_FAIL) and 0 rules in groundidb
 1 sEA gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  48 term constant)
 1 sEA gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  49 term constant)
 1 sEA Adding input predicate cp
 1 sEA PM::aP/0xeb2530 adding predicate ID(0x10000000,  43 term constant), knownAddresses was 0
 1 sEA Adding input predicate cn
 1 sEA PM::aP/0xeb2530 adding predicate ID(0x10000000,  44 term constant), knownAddresses was 0
 1 sEA Adding input predicate rp
 1 sEA PM::aP/0xeb2530 adding predicate ID(0x10000000,  45 term constant), knownAddresses was 0
 1 sEA Adding input predicate rn
 1 sEA PM::aP/0xeb2530 adding predicate ID(0x10000000,  46 term constant), knownAddresses was 0
 1 sEA preparedTuple is <aux_r_10000000_e, "simple.owl", cp, cn, rp, rn, "A", X>
 1 sEA Watching 0 output atoms: {}
 1 sEA gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  48 term constant)
 1 sEA gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  49 term constant)
 1 ExternalAtomMask::updateMask
 1 PM::uM(do)/0xeb2530 = PredicateMask::updateMask (need to update) for predicates {43,44,45,46}
 1 PM::uM(do)/0xeb2530 need to inspect 1 missing bits
 1 PM::uM(do)/0xeb2530 relevant predicate constants are cp, cn, rp, rn, 
 1 PM::uM(do)/0xeb2530 updateMask created new set of relevant ogatoms: {} and knownAddresses is 1
 1 RMG: Repair model generator is instantiated for a non-disjunctive component
 1 Computing fixpoint of extensions of domain predicates
 1 0 inner external atoms are necessary for establishing de-safety
 1 RMG: after parsing the liberal safety option
 1 RMG: evaluating guessing program
 1 Instantiating genuine grounder with gringo
 1 Creating new term with name 'int0'
 1 stored term Term(int0) which got ID(0x10000000,  53 term constant)
 1 Creating new term with name 'anonymous1'
 1 stored term Term(anonymous1) which got ID(0x10000000,  54 term constant)
 1 Sending the following input to Gringo: {{c("a").
 :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X), c(X).
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) | aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) :- c(X).
int0(0..0).}}
 1 parsing gringo ground atom 'aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")'
 1 Term tuple: aux_r_10000000_e
 1 got token 'aux_r_10000000_e'
 1 Term tuple: "simple.owl"
 1 got token '"simple.owl"'
 1 Term tuple: cp
 1 got token 'cp'
 1 Term tuple: cn
 1 got token 'cn'
 1 Term tuple: rp
 1 got token 'rp'
 1 Term tuple: rn
 1 got token 'rn'
 1 Term tuple: "A"
 1 got token '"A"'
 1 Term tuple: "a"
 1 got token '"a"'
 1 Got atom aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") with Gringo-ID 3 and dlvhex-ID ID(0x00c00000,   1 atom ordinary_ground)
 1 Got atom c("a") with Gringo-ID 2 and dlvhex-ID ID(0x00000000,   0 atom ordinary_ground)
 1 parsing gringo ground atom 'aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")'
 1 Term tuple: aux_n_10000000_e
 1 got token 'aux_n_10000000_e'
 1 Term tuple: "simple.owl"
 1 got token '"simple.owl"'
 1 Term tuple: cp
 1 got token 'cp'
 1 Term tuple: cn
 1 got token 'cn'
 1 Term tuple: rp
 1 got token 'rp'
 1 Term tuple: rn
 1 got token 'rn'
 1 Term tuple: "A"
 1 got token '"A"'
 1 Term tuple: "a"
 1 got token '"a"'
 1 Got atom aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") with Gringo-ID 5 and dlvhex-ID ID(0x00c00000,   2 atom ordinary_ground)
 1 parsing gringo ground atom 'int0(0)'
 1 Term tuple: int0
 1 got token 'int0'
 1 Term tuple: 0
 1 got token '0'
 1 Got atom int0(0) with Gringo-ID 4 and dlvhex-ID ID(0x00000000,   3 atom ordinary_ground)
 1 Transforming 4 rules to DLVHEX
 1 Setting fact 0 (Gringo: 2)
 1 Adding rule ID(0x31000000,  12 rule constraint)
 1 Setting fact 3 (Gringo: 4)
 1 Adding rule ID(0x30100000,  13 rule regular)
 1 Got the following ground program from Gringo: {c("a").int0(0).
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
}
 1 sEA  = ExternalAtomMask::setEAtom for &cDL["simple.owl",cp,cn,rp,rn,"A"](X)  (aux=ID_FAIL) and 2 rules in groundidb
 1 sEA gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  48 term constant)
 1 sEA gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  49 term constant)
 1 sEA Adding input predicate cp
 1 sEA PM::aP/0xec40a0 adding predicate ID(0x10000000,  43 term constant), knownAddresses was 0
 1 sEA Adding input predicate cn
 1 sEA PM::aP/0xec40a0 adding predicate ID(0x10000000,  44 term constant), knownAddresses was 0
 1 sEA Adding input predicate rp
 1 sEA PM::aP/0xec40a0 adding predicate ID(0x10000000,  45 term constant), knownAddresses was 0
 1 sEA Adding input predicate rn
 1 sEA PM::aP/0xec40a0 adding predicate ID(0x10000000,  46 term constant), knownAddresses was 0
 1 sEA preparedTuple is <aux_r_10000000_e, "simple.owl", cp, cn, rp, rn, "A", X>
 1 sEA Watching 2 output atoms: {aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")}
 1 sEA gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  48 term constant)
 1 sEA gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  49 term constant)
 1 sEA Output atom aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") matches the external atom
 1 sEA Output atom aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") matches the external atom
 1 ExternalAtomMask::updateMask
 1 PM::uM(do)/0xec40a0 = PredicateMask::updateMask (need to update) for predicates {43,44,45,46}
 1 PM::uM(do)/0xec40a0 need to inspect 4 missing bits
 1 PM::uM(do)/0xec40a0 relevant predicate constants are cp, cn, rp, rn, 
 1 PM::uM(do)/0xec40a0 updateMask created new set of relevant ogatoms: {aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")} and knownAddresses is 4
 1 Auxiliary 1 maps to ID(0x06000000,   0 atom external)
 1 Auxiliary 2 maps to ID(0x06000000,   0 atom external)
 1 Contructing atom dependency graph for 2 rules
 1 Adding ordinary edges
 1 Adding e-edges
 1 EA::uM/0xea8d60 ENTRY
 1 EA::uM/0xea8d60 PM::uM(do)/0xea8940 = PredicateMask::updateMask (need to update) for predicates {43,44,45,46}
 1 EA::uM/0xea8d60 PM::uM(do)/0xea8940 need to inspect 4 missing bits
 1 EA::uM/0xea8d60 PM::uM(do)/0xea8940 relevant predicate constants are cp, cn, rp, rn, 
 1 EA::uM/0xea8d60 PM::uM(do)/0xea8940 updateMask created new set of relevant ogatoms: {} and knownAddresses is 4
 1 EA::uM/0xea8d60 EXIT
 1 Adding ordinary edges
 1 Adding e-edges
 1 Computing strongly connected components
 1 Component 0: 1
 1 Component 1: 2
 1 Partitioning program
 1 Partition 0
 1 aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Partition 1
 1 aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Computing head-cycles of components
 1 Component 0: 0
 1 Component 1: 0
 1 Computing e-cycles of components
 1 Program:
EDB: {c("a"),int0(0)}
IDB:
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").

has SCC-decomposition: { aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") } (HC: 0, EC: 0) { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") } (HC: 0, EC: 0) 
 1 Instantiating genuine solver with clasp (min-check: 0)
 1 Configure clasp in ASP mode
 1 Interpreting clasp command-line
 1 Found configuration: --configuration=frumpy
 1 Configuring options
 1 Parsing command-line
 1 Assigning specified values
 1 Assigning defaults
 1 Applying options
 1 Finished option parsing
 1 Sending EDB to clasp: {c("a"),int0(0)}
 1 Sending IDB to clasp
 1 sendRuleToClasp :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Adding to body: 5
 1 sendRuleToClasp aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Adding to head: 5
 1 Adding to head: 6
 1 SAT instance has 1 variables
 1 Instance is not inconsistent
 1 Setting all 1 variables to frozen
 1 Prepare model enumerator
 1 Finalizing initialization
 1 Problem has 1 variables
 1 Symbol table of optimized program:
 1 H:0 (c("a")) <--> C:0/0
 1 H:3 (int0(0)) <--> C:0/0
 1 H:1 (aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")) <--> C:1/!0
 1 H:2 (aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")) <--> C:0/0
 1 hexToClasp.size()=4, symTab.size()=4
 1 Prepare solver object
 1 Adding post propagator
 1 Initializing assignment extraction
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:1/!0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Extracting full interpretation from clasp
 1 Extracting clasp interpretation
 1 Literal C:0/0@0,H:0:c("a") is true
 1 Literal C:0/0@0,H:3:int0(0) is true
 1 Literal C:1/!0@0,H:1:aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") is false
 1 Literal C:0/0@0,H:2:aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") is true
 1 RMG: before calling learnSupportSets method
 1 RMG: learning support sets is started
 1 RMG: Number of all eatoms: 1
 1 gACS getAuxiliaryConstantSymbol for o ID(0x00000000,   0 atom ordinary_ground)
 1 gACS found ID(0x10800000,  39 term constant)
 1 gACS getAuxiliaryConstantSymbol for o ID(0x00000000,   1 atom ordinary_ground)
 1 gACS created symbol 'aux_o_0_1'
 1 gACS PM::aP/0xe88180 adding predicate ID(0x10800000,  55 term constant), knownAddresses was 0
 1 gACS returning id ID(0x10800000,  55 term constant) for aux symbol aux_o_0_1
 1 stored term Term(O) which got ID(0x12000000,  56 term variable)
 1 stored term Term(O1) which got ID(0x12000000,  57 term variable)
 1 stored term Term(O2) which got ID(0x12000000,  58 term variable)
 1 RMG: consider atom &cDL["simple.owl",cp,cn,rp,rn,"A"](X)
 1 RMG: evaluating external atom &cDL["simple.owl",cp,cn,rp,rn,"A"](X) for support set learning
 1 = learnSupportSetsForExternalAtom for &cDL["simple.owl",cp,cn,rp,rn,"A"](X)  (aux=ID_FAIL)
 1 EA::uM/0xea8d60 ENTRY
 1 EA::uM/0xea8d60 EXIT
 1 EL: LSS: Learning support sets
 1 prepareOntology
 1 Loading ontologysimple.owl
FaCT++.Kernel: Reasoner for the SROIQ(D) Description Logic, 64-bit
Copyright (C) Dmitry Tsarkov, 2002-2013. Version 1.6.2 (19 February 2013)
 1 Assigning ontology name
 1 Reading file simple.owl
 1 Extracting ontology namespace
 1 Namespace is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31 (path: /home/dasha/Documents/software/dlliteplugin/benchmarks/inconsistent/DLLite/taxi/instances/simple.owl, version: )
 1 Submitting ontology with Abox to reasoning kernel
 1 Consistency of KB: 1
 1 Analyzing ontology (Tbox and Abox)
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31 / rdf:type / owl:Ontology
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#A / rdf:type / owl:Class
 1 Found concept: "A"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#B / rdf:type / owl:Class
 1 stored term Term("B") which got ID(0x10000000,  59 term constant)
 1 Found concept: "B"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#B / rdfs:subClassOf / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C / rdf:type / owl:Class
 1 stored term Term("C") which got ID(0x10000000,  60 term constant)
 1 Found concept: "C"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C / rdfs:subClassOf / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#A
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#D / rdf:type / owl:Class
 1 stored term Term("D") which got ID(0x10000000,  61 term constant)
 1 Found concept: "D"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / owl:NamedIndividual
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#A
 1 NS: Subject is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 NS: After storage: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 stored oatom OrdinaryAtom(a00000,'aux_o_0_0("A","a")',[ID(0x10800000,  39 term constant),ID(0x10000000,  47 term constant),ID(0x10000000,  41 term constant)]) which got ID(0x00a00000,   4 atom ordinary_ground)
 1 NS: Found individual: "a"
 1 NS: Found concept assertion: A("a")
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C
 1 NS: Subject is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 NS: After storage: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 stored oatom OrdinaryAtom(a00000,'aux_o_0_0("C","a")',[ID(0x10800000,  39 term constant),ID(0x10000000,  60 term constant),ID(0x10000000,  41 term constant)]) which got ID(0x00a00000,   5 atom ordinary_ground)
 1 NS: Found individual: "a"
 1 NS: Found concept assertion: C("a")
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#D
 1 NS: Subject is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 NS: After storage: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 stored oatom OrdinaryAtom(a00000,'aux_o_0_0("D","a")',[ID(0x10800000,  39 term constant),ID(0x10000000,  61 term constant),ID(0x10000000,  41 term constant)]) which got ID(0x00a00000,   6 atom ordinary_ground)
 1 NS: Found individual: "a"
 1 NS: Found concept assertion: D("a")
 1 Concept assertions: {aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a")}
 1 Computing classification
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31 / rdf:type / owl:Ontology
 1 No
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#A / rdf:type / owl:Class
 1 Construct facts of the form op(C,negC), sub(C,C) for this class.
 1 stored term Term("-A") which got ID(0x10000000,  62 term constant)
 1 stored oatom OrdinaryAtom(0,'op("A","-A")',[ID(0x10000000,  31 term constant),ID(0x10000000,  47 term constant),ID(0x10000000,  62 term constant)]) which got ID(0x00000000,   7 atom ordinary_ground)
 1 stored oatom OrdinaryAtom(0,'sub("A","A")',[ID(0x10000000,  30 term constant),ID(0x10000000,  47 term constant),ID(0x10000000,  47 term constant)]) which got ID(0x00000000,   8 atom ordinary_ground)
 1 No
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#B / rdf:type / owl:Class
 1 Construct facts of the form op(C,negC), sub(C,C) for this class.
 1 stored term Term("-B") which got ID(0x10000000,  63 term constant)
 1 stored oatom OrdinaryAtom(0,'op("B","-B")',[ID(0x10000000,  31 term constant),ID(0x10000000,  59 term constant),ID(0x10000000,  63 term constant)]) which got ID(0x00000000,   9 atom ordinary_ground)
 1 stored oatom OrdinaryAtom(0,'sub("B","B")',[ID(0x10000000,  30 term constant),ID(0x10000000,  59 term constant),ID(0x10000000,  59 term constant)]) which got ID(0x00000000,  10 atom ordinary_ground)
 1 No
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#B / rdfs:subClassOf / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C
 1 No
 1 stored oatom OrdinaryAtom(0,'sub("B","C")',[ID(0x10000000,  30 term constant),ID(0x10000000,  59 term constant),ID(0x10000000,  60 term constant)]) which got ID(0x00000000,  11 atom ordinary_ground)
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C / rdf:type / owl:Class
 1 Construct facts of the form op(C,negC), sub(C,C) for this class.
 1 stored term Term("-C") which got ID(0x10000000,  64 term constant)
 1 stored oatom OrdinaryAtom(0,'op("C","-C")',[ID(0x10000000,  31 term constant),ID(0x10000000,  60 term constant),ID(0x10000000,  64 term constant)]) which got ID(0x00000000,  12 atom ordinary_ground)
 1 stored oatom OrdinaryAtom(0,'sub("C","C")',[ID(0x10000000,  30 term constant),ID(0x10000000,  60 term constant),ID(0x10000000,  60 term constant)]) which got ID(0x00000000,  13 atom ordinary_ground)
 1 No
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C / rdfs:subClassOf / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#A
 1 No
 1 stored oatom OrdinaryAtom(0,'sub("C","A")',[ID(0x10000000,  30 term constant),ID(0x10000000,  60 term constant),ID(0x10000000,  47 term constant)]) which got ID(0x00000000,  14 atom ordinary_ground)
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#D / rdf:type / owl:Class
 1 Construct facts of the form op(C,negC), sub(C,C) for this class.
 1 stored term Term("-D") which got ID(0x10000000,  65 term constant)
 1 stored oatom OrdinaryAtom(0,'op("D","-D")',[ID(0x10000000,  31 term constant),ID(0x10000000,  61 term constant),ID(0x10000000,  65 term constant)]) which got ID(0x00000000,  15 atom ordinary_ground)
 1 stored oatom OrdinaryAtom(0,'sub("D","D")',[ID(0x10000000,  30 term constant),ID(0x10000000,  61 term constant),ID(0x10000000,  61 term constant)]) which got ID(0x00000000,  16 atom ordinary_ground)
 1 No
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / owl:NamedIndividual
 1 No
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#A
 1 No
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C
 1 No
 1 No
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#D
 1 No
 1 No
 1 Checking if there are any domain restrictions on properties
 1 CLP: EDB of classification program: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D")}
 1 LSS: Using the following facts as input to the classification program: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D")}
 1 Resetting context
 1 Starting state pipeline without parsing
 1 Associate PluginAtom instances with ExternalAtom instances
 1 aEAwPA = associateExtAtomsWithPluginAtoms
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'sub(X,Y),sub(Y,Z)'
 1 rFS  safevars ''
 1 rFS checking literal sub(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal sub(Y,Z)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'sub(X,Y),sub(Y,Z)'
 1 rFS  -> newsafevars 'X,Y,Z'
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'op(X,X2),op(Y,Y2),sub(X,Y)'
 1 rFS  safevars ''
 1 rFS checking literal op(X,X2)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal op(Y,Y2)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal sub(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'op(X,X2),op(Y,Y2),sub(X,Y)'
 1 rFS  -> newsafevars 'X,Y,X2,Y2'
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'sub(X,Y),op(Y,Y1)'
 1 rFS  safevars ''
 1 rFS checking literal sub(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal op(Y,Y1)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'sub(X,Y),op(Y,Y1)'
 1 rFS  -> newsafevars 'X,Y,Y1'
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'conf(X,Y1),sub(Y2,Y1)'
 1 rFS  safevars ''
 1 rFS checking literal conf(X,Y1)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal sub(Y2,Y1)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'conf(X,Y1),sub(Y2,Y1)'
 1 rFS  -> newsafevars 'X,Y2,Y1'
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'conf(X,Y),inv(X,Y)'
 1 rFS  safevars ''
 1 rFS checking literal conf(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal inv(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'conf(X,Y),inv(X,Y)'
 1 rFS  -> newsafevars 'X,Y'
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'op(X,Y)'
 1 rFS  safevars ''
 1 rFS checking literal op(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'op(X,Y)'
 1 rFS  -> newsafevars 'X,Y'
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'inv(X,Y)'
 1 rFS  safevars ''
 1 rFS checking literal inv(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'inv(X,Y)'
 1 rFS  -> newsafevars 'X,Y'
 1 LiberalSafetyChecker::createDependencyGraph
 1 Computing strongly connected components in attribute dependency graph
 1 Checking if cycle 5 is benign
 1 Cycle is benign
 1 Checking if cycle 6 is benign
 1 Cycle is benign
 1 0 attributes depend cyclically on external attributes
 1 Attribute sub#1 is externally acyclic
 1 Attribute sub#1 is domain-expansion safe
 1 Variable r5/X is bounded
 1 Fulfilled precondition of attribute sub#1
 1 Variable r5/Y is bounded
 1 Variable r6/X is bounded
 1 Variable r7/X is bounded
 1 Fulfilled precondition of attribute conf#1
 1 Variable r8/Y2 is bounded
 1 Fulfilled precondition of attribute conf#2
 1 Attribute sub#2 is externally acyclic
 1 Attribute sub#2 is domain-expansion safe
 1 Variable r5/Z is bounded
 1 Fulfilled precondition of attribute sub#2
 1 Variable r6/Y is bounded
 1 Variable r7/Y is bounded
 1 Variable r8/Y1 is bounded
 1 Attribute op#1 is externally acyclic
 1 Attribute op#1 is domain-expansion safe
 1 Variable r9/X is bounded
 1 Fulfilled precondition of attribute op#2
 1 Attribute op#2 is domain-expansion safe
 1 Variable r6/X2 is bounded
 1 Fulfilled precondition of attribute sub#2
 1 Variable r6/Y2 is bounded
 1 Fulfilled precondition of attribute sub#1
 1 Variable r7/Y1 is bounded
 1 Fulfilled precondition of attribute conf#2
 1 Attribute conf#2 is domain-expansion safe
 1 Variable r11/Y is bounded
 1 Variable r9/Y is bounded
 1 Fulfilled precondition of attribute op#1
 1 Attribute op#2 is externally acyclic
 1 Attribute conf#1 is externally acyclic
 1 Attribute conf#1 is domain-expansion safe
 1 Variable r8/X is bounded
 1 Fulfilled precondition of attribute conf#1
 1 Variable r11/X is bounded
 1 Fulfilled precondition of attribute confref#1
 1 Attribute confref#1 is domain-expansion safe
 1 Attribute conf#2 is externally acyclic
 1 Attribute confref#1 is externally acyclic
 1 Attribute inv#1 is externally acyclic
 1 Attribute inv#1 is domain-expansion safe
 1 Variable r10/X is bounded
 1 Fulfilled precondition of attribute inv#2
 1 Attribute inv#2 is domain-expansion safe
 1 Variable r10/Y is bounded
 1 Fulfilled precondition of attribute inv#1
 1 Attribute inv#2 is externally acyclic
 1 Constructing optimized rule
 1 Checking safety of optimized rule
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'sub(X,Y),sub(Y,Z)'
 1 rFS  safevars ''
 1 rFS checking literal sub(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal sub(Y,Z)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'sub(X,Y),sub(Y,Z)'
 1 rFS  -> newsafevars 'X,Y,Z'
 1 Checking variables of optimized rule
 1 Optimized rule is safe
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 202 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 0 (it should be 1)
 1 Constructing optimized rule
 1 Checking safety of optimized rule
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'op(X,X2),op(Y,Y2),sub(X,Y)'
 1 rFS  safevars ''
 1 rFS checking literal op(X,X2)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal op(Y,Y2)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal sub(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'op(X,X2),op(Y,Y2),sub(X,Y)'
 1 rFS  -> newsafevars 'X,Y,X2,Y2'
 1 Checking variables of optimized rule
 1 Optimized rule is safe
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 202 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 0 (it should be 1)
 1 Constructing optimized rule
 1 Checking safety of optimized rule
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'sub(X,Y),op(Y,Y1)'
 1 rFS  safevars ''
 1 rFS checking literal sub(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal op(Y,Y1)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'sub(X,Y),op(Y,Y1)'
 1 rFS  -> newsafevars 'X,Y,Y1'
 1 Checking variables of optimized rule
 1 Optimized rule is safe
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 202 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 0 (it should be 1)
 1 Constructing optimized rule
 1 Checking safety of optimized rule
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'conf(X,Y1),sub(Y2,Y1)'
 1 rFS  safevars ''
 1 rFS checking literal conf(X,Y1)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal sub(Y2,Y1)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'conf(X,Y1),sub(Y2,Y1)'
 1 rFS  -> newsafevars 'X,Y2,Y1'
 1 Checking variables of optimized rule
 1 Optimized rule is safe
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 202 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 0 (it should be 1)
 1 Constructing optimized rule
 1 Checking safety of optimized rule
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'conf(X,Y),inv(X,Y)'
 1 rFS  safevars ''
 1 rFS checking literal conf(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS checking literal inv(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'conf(X,Y),inv(X,Y)'
 1 rFS  -> newsafevars 'X,Y'
 1 Checking variables of optimized rule
 1 Optimized rule is safe
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 202 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 0 (it should be 1)
 1 Constructing optimized rule
 1 Checking safety of optimized rule
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'op(X,Y)'
 1 rFS  safevars ''
 1 rFS checking literal op(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'op(X,Y)'
 1 rFS  -> newsafevars 'X,Y'
 1 Checking variables of optimized rule
 1 Optimized rule is safe
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 202 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 0 (it should be 1)
 1 Constructing optimized rule
 1 Checking safety of optimized rule
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src 'inv(X,Y)'
 1 rFS  safevars ''
 1 rFS checking literal inv(X,Y)
 1 rFS  -> safe, marking all variables as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt 'inv(X,Y)'
 1 rFS  -> newsafevars 'X,Y'
 1 Checking variables of optimized rule
 1 Optimized rule is safe
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 202 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 0 (it should be 1)
 1 Domain Expansion Safety: 1 (9 out of 9 attributes are safe)
 1 =createNodesAndIntraRuleDependencies
 1 cNaIRDfR/0x5 ENTRY
 1 cNaIRDfR/0x5 =createNodesAndIntraRuleDependenciesForRule for rule ID(0x30000000,   5 rule regular) sub(X,Z) :- sub(X,Y), sub(Y,Z).
 1 cNaIRDfR/0x5 creating node for ID ID(0x30000000,   5 rule regular)
 1 cNaIRDfR/0x5 adding head item ID(0x01000000,   4 atom ordinary_nonground)
 1 cNaIRDfR/0x5 adding body literal ID(0x21000000,   3 literal ordinary_nonground)
 1 cNaIRDfR/0x5 adding body literal ID(0x21000000,   5 literal ordinary_nonground)
 1 cNaIRDfR/0x5 EXIT
 1 cNaIRDfR/0x6 ENTRY
 1 cNaIRDfR/0x6 =createNodesAndIntraRuleDependenciesForRule for rule ID(0x30000000,   6 rule regular) sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y).
 1 cNaIRDfR/0x6 creating node for ID ID(0x30000000,   6 rule regular)
 1 cNaIRDfR/0x6 adding head item ID(0x01000000,   8 atom ordinary_nonground)
 1 cNaIRDfR/0x6 adding body literal ID(0x21000000,   6 literal ordinary_nonground)
 1 cNaIRDfR/0x6 adding body literal ID(0x21000000,   7 literal ordinary_nonground)
 1 cNaIRDfR/0x6 adding body literal ID(0x21000000,   3 literal ordinary_nonground)
 1 cNaIRDfR/0x6 EXIT
 1 cNaIRDfR/0x7 ENTRY
 1 cNaIRDfR/0x7 =createNodesAndIntraRuleDependenciesForRule for rule ID(0x30000000,   7 rule regular) conf(X,Y1) :- sub(X,Y), op(Y,Y1).
 1 cNaIRDfR/0x7 creating node for ID ID(0x30000000,   7 rule regular)
 1 cNaIRDfR/0x7 adding head item ID(0x01000000,  11 atom ordinary_nonground)
 1 cNaIRDfR/0x7 adding body literal ID(0x21000000,   3 literal ordinary_nonground)
 1 cNaIRDfR/0x7 adding body literal ID(0x21000000,  19 literal ordinary_nonground)
 1 cNaIRDfR/0x7 EXIT
 1 cNaIRDfR/0x8 ENTRY
 1 cNaIRDfR/0x8 =createNodesAndIntraRuleDependenciesForRule for rule ID(0x30000000,   8 rule regular) conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1).
 1 cNaIRDfR/0x8 creating node for ID ID(0x30000000,   8 rule regular)
 1 cNaIRDfR/0x8 adding head item ID(0x01000000,  12 atom ordinary_nonground)
 1 cNaIRDfR/0x8 adding body literal ID(0x21000000,  11 literal ordinary_nonground)
 1 cNaIRDfR/0x8 adding body literal ID(0x21000000,   9 literal ordinary_nonground)
 1 cNaIRDfR/0x8 EXIT
 1 cNaIRDfR/0xb ENTRY
 1 cNaIRDfR/0xb =createNodesAndIntraRuleDependenciesForRule for rule ID(0x30000000,  11 rule regular) confref(X) :- conf(X,Y), inv(X,Y).
 1 cNaIRDfR/0xb creating node for ID ID(0x30000000,  11 rule regular)
 1 cNaIRDfR/0xb adding head item ID(0x01000000,  18 atom ordinary_nonground)
 1 cNaIRDfR/0xb adding body literal ID(0x21000000,  10 literal ordinary_nonground)
 1 cNaIRDfR/0xb adding body literal ID(0x21000000,  15 literal ordinary_nonground)
 1 cNaIRDfR/0xb EXIT
 1 cNaIRDfR/0x9 ENTRY
 1 cNaIRDfR/0x9 =createNodesAndIntraRuleDependenciesForRule for rule ID(0x30000000,   9 rule regular) op(Y,X) :- op(X,Y).
 1 cNaIRDfR/0x9 creating node for ID ID(0x30000000,   9 rule regular)
 1 cNaIRDfR/0x9 adding head item ID(0x01000000,  14 atom ordinary_nonground)
 1 cNaIRDfR/0x9 adding body literal ID(0x21000000,  13 literal ordinary_nonground)
 1 cNaIRDfR/0x9 EXIT
 1 cNaIRDfR/0xa ENTRY
 1 cNaIRDfR/0xa =createNodesAndIntraRuleDependenciesForRule for rule ID(0x30000000,  10 rule regular) inv(Y,X) :- inv(X,Y).
 1 cNaIRDfR/0xa creating node for ID ID(0x30000000,  10 rule regular)
 1 cNaIRDfR/0xa adding head item ID(0x01000000,  17 atom ordinary_nonground)
 1 cNaIRDfR/0xa adding body literal ID(0x21000000,  15 literal ordinary_nonground)
 1 cNaIRDfR/0xa EXIT
 1 =createExternalPredicateInputDependencies
 1 =createHeadHeadUnifyingDependencies
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) = OrdinaryAtom(1000000,'inv(Y,X)',[ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)])
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) adding unifying head-head dependency for OrdinaryAtom(1000000,'inv(Y,X)',[ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [6]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) it2:ID(0x01000000,  14 atom ordinary_nonground)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)])
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  31 term constant)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) it2:ID(0x01000000,  18 atom ordinary_nonground)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'confref(X)',[ID(0x10000000,  35 term constant),ID(0x12000000,  36 term variable)])
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) it2:ID(0x01000000,  12 atom ordinary_nonground)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)])
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  32 term constant)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) it2:ID(0x01000000,  11 atom ordinary_nonground)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  32 term constant)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) it2:ID(0x01000000,   8 atom ordinary_nonground)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)])
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  30 term constant)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) it2:ID(0x01000000,   4 atom ordinary_nonground)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)])
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  30 term constant)
 1 it1:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) = OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)])
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) adding unifying head-head dependency for OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [5]
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) it2:ID(0x01000000,  18 atom ordinary_nonground)
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'confref(X)',[ID(0x10000000,  35 term constant),ID(0x12000000,  36 term variable)])
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) it2:ID(0x01000000,  12 atom ordinary_nonground)
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)])
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  32 term constant)
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) it2:ID(0x01000000,  11 atom ordinary_nonground)
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  32 term constant)
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) it2:ID(0x01000000,   8 atom ordinary_nonground)
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)])
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  30 term constant)
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) it2:ID(0x01000000,   4 atom ordinary_nonground)
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)])
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  30 term constant)
 1 it1:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) = OrdinaryAtom(1000000,'confref(X)',[ID(0x10000000,  35 term constant),ID(0x12000000,  36 term variable)])
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) adding unifying head-head dependency for OrdinaryAtom(1000000,'confref(X)',[ID(0x10000000,  35 term constant),ID(0x12000000,  36 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [4]
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) it2:ID(0x01000000,  12 atom ordinary_nonground)
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)])
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) it2:ID(0x01000000,  11 atom ordinary_nonground)
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) it2:ID(0x01000000,   8 atom ordinary_nonground)
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)])
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) it2:ID(0x01000000,   4 atom ordinary_nonground)
 1 it1:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)])
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) = OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)])
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) adding unifying head-head dependency for OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [3]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) it2:ID(0x01000000,  11 atom ordinary_nonground)
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  32 term constant)
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  36 term variable)
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  51 term variable) vs ID(0x12000000,  52 term variable)
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) adding unifying head-head dependency between OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [3] and OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [2]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) it2:ID(0x01000000,   8 atom ordinary_nonground)
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)])
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) it2:ID(0x01000000,   4 atom ordinary_nonground)
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)])
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 it1:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) = OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) adding unifying head-head dependency for OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [2]
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) it2:ID(0x01000000,   8 atom ordinary_nonground)
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)])
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) it2:ID(0x01000000,   4 atom ordinary_nonground)
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)])
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 it1:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) = OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)])
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) adding unifying head-head dependency for OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [1]
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) it2:ID(0x01000000,   4 atom ordinary_nonground)
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)])
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  30 term constant)
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  51 term variable) vs ID(0x12000000,  36 term variable)
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  50 term variable) vs ID(0x12000000,  38 term variable)
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 it1:ID(0x01000000,   8 atom ordinary_nonground) adding unifying head-head dependency between OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [1] and OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [0]
 1 it1:ID(0x01000000,   4 atom ordinary_nonground) = OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)])
 1 it1:ID(0x01000000,   4 atom ordinary_nonground) adding unifying head-head dependency for OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [0]
 1 =createHeadBodyUnifyingDependencies
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) = OrdinaryAtom(1000000,'inv(Y,X)',[ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,  13 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,  15 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  34 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  37 term variable) vs ID(0x12000000,  36 term variable)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'inv(Y,X)',[ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) in head of rules <6> and OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) in posR/posC/neg bodies [4,6]/[]/[]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,  10 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,   9 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,  11 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,  19 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,   7 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,   6 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,   5 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) itb:ID(0x01000000,   3 atom ordinary_nonground)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  34 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  17 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) = OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,  13 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  37 term variable) vs ID(0x12000000,  36 term variable)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) in head of rules <5> and OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) in posR/posC/neg bodies [5]/[]/[]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,  15 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  34 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,  10 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,   9 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,  11 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,  19 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  37 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  52 term variable)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) in head of rules <5> and OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)]) in posR/posC/neg bodies [2]/[]/[]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,   7 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  37 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  51 term variable)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) in head of rules <5> and OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)]) in posR/posC/neg bodies [1]/[]/[]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,   6 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  37 term variable) vs ID(0x12000000,  36 term variable)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  50 term variable)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) in head of rules <5> and OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]) in posR/posC/neg bodies [1]/[]/[]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,   5 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) itb:ID(0x01000000,   3 atom ordinary_nonground)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  31 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  14 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) = OrdinaryAtom(1000000,'confref(X)',[ID(0x10000000,  35 term constant),ID(0x12000000,  36 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,  13 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,  15 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,  10 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,   9 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,  11 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,  19 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,   7 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,   6 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,   5 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)])
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) itb:ID(0x01000000,   3 atom ordinary_nonground)
 1 ith:ID(0x01000000,  18 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) = OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,  13 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,  15 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  34 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,  10 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  36 term variable)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  51 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]) in head of rules <3> and OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) in posR/posC/neg bodies [4]/[]/[]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,   9 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,  11 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  36 term variable)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  51 term variable) vs ID(0x12000000,  52 term variable)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]) in head of rules <3> and OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]) in posR/posC/neg bodies [3]/[]/[]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,  19 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,   7 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,   6 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,   5 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) itb:ID(0x01000000,   3 atom ordinary_nonground)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  12 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) = OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,  13 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,  15 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  34 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,  10 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  36 term variable)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  52 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]) in head of rules <2> and OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) in posR/posC/neg bodies [4]/[]/[]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,   9 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,  11 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  36 term variable)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  52 term variable) vs ID(0x12000000,  52 term variable)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]) in head of rules <2> and OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]) in posR/posC/neg bodies [3]/[]/[]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,  19 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,   7 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,   6 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,   5 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) itb:ID(0x01000000,   3 atom ordinary_nonground)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  32 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,  11 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) = OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,  13 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,  15 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  34 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,  10 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,   9 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  51 term variable) vs ID(0x12000000,  51 term variable)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  50 term variable) vs ID(0x12000000,  52 term variable)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]) in head of rules <1> and OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]) in posR/posC/neg bodies [3]/[]/[]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,  11 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,  19 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,   7 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,   6 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,   5 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  51 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  50 term variable) vs ID(0x12000000,  38 term variable)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]) in head of rules <1> and OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]) in posR/posC/neg bodies [0]/[]/[]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) itb:ID(0x01000000,   3 atom ordinary_nonground)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  51 term variable) vs ID(0x12000000,  36 term variable)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  50 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   8 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  50 term variable)]) in head of rules <1> and OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) in posR/posC/neg bodies [0,1,2]/[]/[]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) = OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,  13 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,  15 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  34 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,  10 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,   9 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  51 term variable)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  38 term variable) vs ID(0x12000000,  52 term variable)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]) in head of rules <0> and OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  51 term variable),ID(0x12000000,  52 term variable)]) in posR/posC/neg bodies [3]/[]/[]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,  11 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  32 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,  19 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  52 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,   7 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  51 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,   6 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  31 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,   5 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  38 term variable) vs ID(0x12000000,  38 term variable)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]) in head of rules <0> and OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]) in posR/posC/neg bodies [0]/[]/[]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) itb:ID(0x01000000,   3 atom ordinary_nonground)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) checking against OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)])
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith ENTRY
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith starting with result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 0: checking ID(0x10000000,  30 term constant) vs ID(0x10000000,  30 term constant)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 1: checking ID(0x12000000,  36 term variable) vs ID(0x12000000,  36 term variable)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith at position 2: checking ID(0x12000000,  38 term variable) vs ID(0x12000000,  37 term variable)
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith after propagation of difference (look only after current position!):
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith result1 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith result2 tuple [ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) unifiesWith EXIT
 1 ith:ID(0x01000000,   4 atom ordinary_nonground) adding head-body dependency between OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]) in head of rules <0> and OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) in posR/posC/neg bodies [0,1,2]/[]/[]
 1 Building component graph
 1 created component node 0xf298a0 for scc 0 with depgraph nodes <5>
 1 cNNEiC checking predecessor edges of node 5
 1 calculateFixedDomain
 1 calculateStratificationInfo
 1 -> outerEatoms <>
 1 -> innerRules <ID(0x30000000,   9 rule regular)>
 1 -> innerConstraints <>
 1 -> innerEatoms <>
 1 -> disjunctiveHeads=0 negativeDependencyBetweenRules=0 innerEatomsNonmonotonic=0 outerEatomsNonmonotonic=0 componentIsMonotonic=1
 1 created component node 0xf2a6d0 for scc 1 with depgraph nodes <0,1>
 1 cNNEiC checking predecessor edges of node 0
 1 cNNEiC checking predecessor edges of node 1
 1 calculateFixedDomain
 1 calculateStratificationInfo
 1 -> outerEatoms <>
 1 -> innerRules <ID(0x30000000,   5 rule regular),ID(0x30000000,   6 rule regular)>
 1 -> innerConstraints <>
 1 -> innerEatoms <>
 1 -> disjunctiveHeads=0 negativeDependencyBetweenRules=0 innerEatomsNonmonotonic=0 outerEatomsNonmonotonic=0 componentIsMonotonic=1
 1 created component node 0xf28b60 for scc 2 with depgraph nodes <2,3>
 1 cNNEiC checking predecessor edges of node 2
 1 cNNEiC checking predecessor edges of node 3
 1 calculateFixedDomain
 1 calculateStratificationInfo
 1 -> outerEatoms <>
 1 -> innerRules <ID(0x30000000,   7 rule regular),ID(0x30000000,   8 rule regular)>
 1 -> innerConstraints <>
 1 -> innerEatoms <>
 1 -> disjunctiveHeads=0 negativeDependencyBetweenRules=0 innerEatomsNonmonotonic=0 outerEatomsNonmonotonic=0 componentIsMonotonic=1
 1 created component node 0xf28ce0 for scc 3 with depgraph nodes <6>
 1 cNNEiC checking predecessor edges of node 6
 1 calculateFixedDomain
 1 calculateStratificationInfo
 1 -> outerEatoms <>
 1 -> innerRules <ID(0x30000000,  10 rule regular)>
 1 -> innerConstraints <>
 1 -> innerEatoms <>
 1 -> disjunctiveHeads=0 negativeDependencyBetweenRules=0 innerEatomsNonmonotonic=0 outerEatomsNonmonotonic=0 componentIsMonotonic=1
 1 created component node 0xf28e60 for scc 4 with depgraph nodes <4>
 1 cNNEiC checking predecessor edges of node 4
 1 calculateFixedDomain
 1 calculateStratificationInfo
 1 -> outerEatoms <>
 1 -> innerRules <ID(0x30000000,  11 rule regular)>
 1 -> innerConstraints <>
 1 -> innerEatoms <>
 1 -> disjunctiveHeads=0 negativeDependencyBetweenRules=0 innerEatomsNonmonotonic=0 outerEatomsNonmonotonic=0 componentIsMonotonic=1
 1 found dependency from SCC 1 to SCC 0
 1 found dependency from SCC 1 to SCC 0
 1 found dependency from SCC 2 to SCC 0
 1 found dependency from SCC 2 to SCC 1
 1 found dependency from SCC 2 to SCC 1
 1 found dependency from SCC 2 to SCC 1
 1 found dependency from SCC 2 to SCC 1
 1 found dependency from SCC 4 to SCC 3
 1 found dependency from SCC 4 to SCC 2
 1 found dependency from SCC 4 to SCC 2
 1 Building component graph
 1 invoking build() on eval heuristic
 1 = EvalGraphBuilder::createEvalUnit(<0xf29110,0xf29290,0xf2af60,0xf2b0e0,0xf2b260>,<>)
 1  compr op(Y,X) :- op(X,Y).
 1  compr sub(X,Z) :- sub(X,Y), sub(Y,Z).
sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y).
 1  compr conf(X,Y1) :- sub(X,Y), op(Y,Y1).
conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1).
 1  compr inv(Y,X) :- inv(X,Y).
 1  compr confref(X) :- conf(X,Y), inv(X,Y).
 1 cC = collapseComponents(<0xf29110,0xf29290,0xf2af60,0xf2b0e0,0xf2b260>,<>)
 1 cC created component node 0xf2bdd0 for collapsed component
 1 cC cCCI = computeCollapsedComponentInfos(<0xf29110,0xf29290,0xf2af60,0xf2b0e0,0xf2b260>,<>,.,.,.)
 1 cC cCCI original 0xf29110: (outgoing)
 1 cC cCCI original 0xf29290: (outgoing)
 1 cC cCCI    internal dependency (to 0xf29110)
 1 cC cCCI original 0xf2af60: (outgoing)
 1 cC cCCI    internal dependency (to 0xf29110)
 1 cC cCCI    internal dependency (to 0xf29290)
 1 cC cCCI original 0xf2b0e0: (outgoing)
 1 cC cCCI original 0xf2b260: (outgoing)
 1 cC cCCI    internal dependency (to 0xf2af60)
 1 cC cCCI    internal dependency (to 0xf2b0e0)
 1 cC cCCI original 0xf29110: (incoming)
 1 cC cCCI original 0xf29290: (incoming)
 1 cC cCCI original 0xf2af60: (incoming)
 1 cC cCCI original 0xf2b0e0: (incoming)
 1 cC cCCI original 0xf2b260: (incoming)
 1 cC cCCI calculateStratificationInfo
 1 created unit 0 for new comp 0xf2bdd0
 1 configuring plain model generator factory for eval unit 0
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 209 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 7 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 208 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 6 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 208 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 6 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 207 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 5 (it should be 1)
 1 not converting rule ID(0x30000000,   9 rule regular) (does not contain extatoms)
 1 not converting rule ID(0x30000000,   5 rule regular) (does not contain extatoms)
 1 not converting rule ID(0x30000000,   6 rule regular) (does not contain extatoms)
 1 not converting rule ID(0x30000000,   7 rule regular) (does not contain extatoms)
 1 not converting rule ID(0x30000000,   8 rule regular) (does not contain extatoms)
 1 not converting rule ID(0x30000000,  10 rule regular) (does not contain extatoms)
 1 not converting rule ID(0x30000000,  11 rule regular) (does not contain extatoms)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 206 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 4 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 205 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 3 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 209 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 7 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 208 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 6 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 208 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 6 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 207 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 5 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 206 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 4 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 205 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 3 (it should be 1)
 1 GenuinePlainModelGeneratorFactory got idb op(Y,X) :- op(X,Y). sub(X,Z) :- sub(X,Y), sub(Y,Z). sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y). conf(X,Y1) :- sub(X,Y), op(Y,Y1). conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1). inv(Y,X) :- inv(X,Y). confref(X) :- conf(X,Y), inv(X,Y).
 1 GenuinePlainModelGeneratorFactory got xidb op(Y,X) :- op(X,Y). sub(X,Z) :- sub(X,Y), sub(Y,Z). sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y). conf(X,Y1) :- sub(X,Y), op(Y,Y1). conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1). inv(Y,X) :- inv(X,Y). confref(X) :- conf(X,Y), inv(X,Y).
 1 Destructing component graph 0xea51e0
 1 created virtual final unit ufinal = 1
 1 adding dependency from ufinal to unit 0 join order 0
 1 setting up program ctx for plugin dlvhex-manualevalheuristicsplugin[internal]
 1 setting up program ctx for plugin dlvhex-queryplugin[internal]
 1 setting up program ctx for plugin dlvhex-aggregateplugin[internal]
 1 setting up program ctx for plugin dlvhex-strongnegationplugin[internal]
 1 setting up program ctx for plugin dlvhex-higherorderplugin[internal]
 1 setting up program ctx for plugin dlvhex-weakconstraintplugin[internal]
 1 setting up program ctx for plugin dlvhex-existsplugin[internal]
 1 setting up program ctx for plugin dlvhex-functionplugin[internal]
 1 setting up program ctx for plugin dlvhex-dlliteplugin
 1 DLLitePlugin::setupProgramCtx(ProgramCtx& ctx)
 1 Registry was already previously set
 1 IDs have already been prepared
 1 Classification program was already constructed
 1 setting up program ctx for plugin hexagentplugin
 1 Setting AnswerSetCallback
 1 Evaluate subprogram
 1 EvalUnitModels()@0x7fff1994f100
 1 EvalUnitModels()@0x7fff1994f0a0
 1 EvalUnitModels(const EvalUnitModels&)@0xf29f80 from 0x7fff1994f0a0
 1 EvalUnitModels(const EvalUnitModels&)@0xf29f90 from 0x7fff1994f0a0
 1 EvalUnitModels(const EvalUnitModels&)@0xf29fa0 from 0x7fff1994f0a0
 1 ~EvalUnitModels()@0x7fff1994f0a0
 1 ~EvalUnitModels()@0x7fff1994f100
 1 initializing mbp for unit 0
 1 initializing mbp for unit 1
 1 requesting imodel
 1 =OnlineModelBuilder<...>::getNextIModel(1)
 1 uprops: (no ModelGeneratorFactory)
 1 mbprops: currentmg =      null, needInput = 1, orefcount = 0, imodel =     unset, currentisuccessor = unset
 1 =OnlineModelBuilder<...>::getNextOModel(0):
 1 uprops = op(Y,X) :- op(X,Y).
sub(X,Z) :- sub(X,Y), sub(Y,Z).
sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y).
conf(X,Y1) :- sub(X,Y), op(Y,Y1).
conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1).
inv(Y,X) :- inv(X,Y).
confref(X) :- conf(X,Y), inv(X,Y).
 1 mbprops = currentmg =      null, needInput = 0, orefcount = 0, imodel =     unset, currentisuccessor = unset
 1 =OnlineModelBuilder<...>::getNextIModel(0)
 1 uprops: op(Y,X) :- op(X,Y).
sub(X,Z) :- sub(X,Y), sub(Y,Z).
sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y).
conf(X,Y1) :- sub(X,Y), op(Y,Y1).
conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1).
inv(Y,X) :- inv(X,Y).
confref(X) :- conf(X,Y), inv(X,Y).
 1 mbprops: currentmg =      null, needInput = 0, orefcount = 0, imodel =     unset, currentisuccessor = unset
 1 unit needs no input
 1 running debug checks
 1 =OnlineModelBuilder<...>::advanceOModelForIModel(0)
 1 imodel has properties dummy interpretation=null
 1 =createNextModel(0)
 1 Instantiating genuine grounder with gringo
 1 Creating new term with name 'int2'
 1 stored term Term(int2) which got ID(0x10000000,  66 term constant)
 1 Creating new term with name 'anonymous3'
 1 stored term Term(anonymous3) which got ID(0x10000000,  67 term constant)
 1 Sending the following input to Gringo: {{op("A","-A").sub("A","A").op("B","-B").sub("B","B").sub("B","C").op("C","-C").sub("C","C").sub("C","A").op("D","-D").sub("D","D").
op(Y,X) :- op(X,Y).
sub(X,Z) :- sub(X,Y), sub(Y,Z).
sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y).
conf(X,Y1) :- sub(X,Y), op(Y,Y1).
conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1).
inv(Y,X) :- inv(X,Y).
confref(X) :- conf(X,Y), inv(X,Y).
int2(0..0).}}
 1 Got atom op("A","-A") with Gringo-ID 2 and dlvhex-ID ID(0x00000000,   7 atom ordinary_ground)
 1 Got atom op("B","-B") with Gringo-ID 4 and dlvhex-ID ID(0x00000000,   9 atom ordinary_ground)
 1 Got atom op("C","-C") with Gringo-ID 7 and dlvhex-ID ID(0x00000000,  12 atom ordinary_ground)
 1 Got atom op("D","-D") with Gringo-ID 10 and dlvhex-ID ID(0x00000000,  15 atom ordinary_ground)
 1 parsing gringo ground atom 'op("-A","A")'
 1 Term tuple: op
 1 got token 'op'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Term tuple: "A"
 1 got token '"A"'
 1 Got atom op("-A","A") with Gringo-ID 12 and dlvhex-ID ID(0x00000000,  17 atom ordinary_ground)
 1 parsing gringo ground atom 'op("-B","B")'
 1 Term tuple: op
 1 got token 'op'
 1 Term tuple: "-B"
 1 got token '"-B"'
 1 Term tuple: "B"
 1 got token '"B"'
 1 Got atom op("-B","B") with Gringo-ID 13 and dlvhex-ID ID(0x00000000,  18 atom ordinary_ground)
 1 parsing gringo ground atom 'op("-C","C")'
 1 Term tuple: op
 1 got token 'op'
 1 Term tuple: "-C"
 1 got token '"-C"'
 1 Term tuple: "C"
 1 got token '"C"'
 1 Got atom op("-C","C") with Gringo-ID 14 and dlvhex-ID ID(0x00000000,  19 atom ordinary_ground)
 1 parsing gringo ground atom 'op("-D","D")'
 1 Term tuple: op
 1 got token 'op'
 1 Term tuple: "-D"
 1 got token '"-D"'
 1 Term tuple: "D"
 1 got token '"D"'
 1 Got atom op("-D","D") with Gringo-ID 15 and dlvhex-ID ID(0x00000000,  20 atom ordinary_ground)
 1 Got atom sub("A","A") with Gringo-ID 3 and dlvhex-ID ID(0x00000000,   8 atom ordinary_ground)
 1 Got atom sub("B","B") with Gringo-ID 5 and dlvhex-ID ID(0x00000000,  10 atom ordinary_ground)
 1 Got atom sub("B","C") with Gringo-ID 6 and dlvhex-ID ID(0x00000000,  11 atom ordinary_ground)
 1 Got atom sub("C","C") with Gringo-ID 8 and dlvhex-ID ID(0x00000000,  13 atom ordinary_ground)
 1 Got atom sub("C","A") with Gringo-ID 9 and dlvhex-ID ID(0x00000000,  14 atom ordinary_ground)
 1 Got atom sub("D","D") with Gringo-ID 11 and dlvhex-ID ID(0x00000000,  16 atom ordinary_ground)
 1 parsing gringo ground atom 'sub("-A","-A")'
 1 Term tuple: sub
 1 got token 'sub'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Got atom sub("-A","-A") with Gringo-ID 16 and dlvhex-ID ID(0x00000000,  21 atom ordinary_ground)
 1 parsing gringo ground atom 'sub("-B","-B")'
 1 Term tuple: sub
 1 got token 'sub'
 1 Term tuple: "-B"
 1 got token '"-B"'
 1 Term tuple: "-B"
 1 got token '"-B"'
 1 Got atom sub("-B","-B") with Gringo-ID 17 and dlvhex-ID ID(0x00000000,  22 atom ordinary_ground)
 1 parsing gringo ground atom 'sub("-C","-B")'
 1 Term tuple: sub
 1 got token 'sub'
 1 Term tuple: "-C"
 1 got token '"-C"'
 1 Term tuple: "-B"
 1 got token '"-B"'
 1 Got atom sub("-C","-B") with Gringo-ID 18 and dlvhex-ID ID(0x00000000,  23 atom ordinary_ground)
 1 parsing gringo ground atom 'sub("-C","-C")'
 1 Term tuple: sub
 1 got token 'sub'
 1 Term tuple: "-C"
 1 got token '"-C"'
 1 Term tuple: "-C"
 1 got token '"-C"'
 1 Got atom sub("-C","-C") with Gringo-ID 19 and dlvhex-ID ID(0x00000000,  24 atom ordinary_ground)
 1 parsing gringo ground atom 'sub("-A","-C")'
 1 Term tuple: sub
 1 got token 'sub'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Term tuple: "-C"
 1 got token '"-C"'
 1 Got atom sub("-A","-C") with Gringo-ID 20 and dlvhex-ID ID(0x00000000,  25 atom ordinary_ground)
 1 parsing gringo ground atom 'sub("-D","-D")'
 1 Term tuple: sub
 1 got token 'sub'
 1 Term tuple: "-D"
 1 got token '"-D"'
 1 Term tuple: "-D"
 1 got token '"-D"'
 1 Got atom sub("-D","-D") with Gringo-ID 21 and dlvhex-ID ID(0x00000000,  26 atom ordinary_ground)
 1 parsing gringo ground atom 'sub("B","A")'
 1 Term tuple: sub
 1 got token 'sub'
 1 Term tuple: "B"
 1 got token '"B"'
 1 Term tuple: "A"
 1 got token '"A"'
 1 Got atom sub("B","A") with Gringo-ID 22 and dlvhex-ID ID(0x00000000,  27 atom ordinary_ground)
 1 parsing gringo ground atom 'sub("-A","-B")'
 1 Term tuple: sub
 1 got token 'sub'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Term tuple: "-B"
 1 got token '"-B"'
 1 Got atom sub("-A","-B") with Gringo-ID 23 and dlvhex-ID ID(0x00000000,  28 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("A","-A")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "A"
 1 got token '"A"'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Got atom conf("A","-A") with Gringo-ID 24 and dlvhex-ID ID(0x00000000,  29 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("C","-A")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "C"
 1 got token '"C"'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Got atom conf("C","-A") with Gringo-ID 25 and dlvhex-ID ID(0x00000000,  30 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("B","-A")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "B"
 1 got token '"B"'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Got atom conf("B","-A") with Gringo-ID 26 and dlvhex-ID ID(0x00000000,  31 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("B","-B")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "B"
 1 got token '"B"'
 1 Term tuple: "-B"
 1 got token '"-B"'
 1 Got atom conf("B","-B") with Gringo-ID 27 and dlvhex-ID ID(0x00000000,  32 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("B","-C")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "B"
 1 got token '"B"'
 1 Term tuple: "-C"
 1 got token '"-C"'
 1 Got atom conf("B","-C") with Gringo-ID 28 and dlvhex-ID ID(0x00000000,  33 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("C","-C")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "C"
 1 got token '"C"'
 1 Term tuple: "-C"
 1 got token '"-C"'
 1 Got atom conf("C","-C") with Gringo-ID 29 and dlvhex-ID ID(0x00000000,  34 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("D","-D")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "D"
 1 got token '"D"'
 1 Term tuple: "-D"
 1 got token '"-D"'
 1 Got atom conf("D","-D") with Gringo-ID 30 and dlvhex-ID ID(0x00000000,  35 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("-A","A")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Term tuple: "A"
 1 got token '"A"'
 1 Got atom conf("-A","A") with Gringo-ID 31 and dlvhex-ID ID(0x00000000,  36 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("-B","B")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "-B"
 1 got token '"-B"'
 1 Term tuple: "B"
 1 got token '"B"'
 1 Got atom conf("-B","B") with Gringo-ID 32 and dlvhex-ID ID(0x00000000,  37 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("-C","B")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "-C"
 1 got token '"-C"'
 1 Term tuple: "B"
 1 got token '"B"'
 1 Got atom conf("-C","B") with Gringo-ID 33 and dlvhex-ID ID(0x00000000,  38 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("-A","B")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Term tuple: "B"
 1 got token '"B"'
 1 Got atom conf("-A","B") with Gringo-ID 34 and dlvhex-ID ID(0x00000000,  39 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("-C","C")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "-C"
 1 got token '"-C"'
 1 Term tuple: "C"
 1 got token '"C"'
 1 Got atom conf("-C","C") with Gringo-ID 35 and dlvhex-ID ID(0x00000000,  40 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("-A","C")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "-A"
 1 got token '"-A"'
 1 Term tuple: "C"
 1 got token '"C"'
 1 Got atom conf("-A","C") with Gringo-ID 36 and dlvhex-ID ID(0x00000000,  41 atom ordinary_ground)
 1 parsing gringo ground atom 'conf("-D","D")'
 1 Term tuple: conf
 1 got token 'conf'
 1 Term tuple: "-D"
 1 got token '"-D"'
 1 Term tuple: "D"
 1 got token '"D"'
 1 Got atom conf("-D","D") with Gringo-ID 37 and dlvhex-ID ID(0x00000000,  42 atom ordinary_ground)
 1 parsing gringo ground atom 'int2(0)'
 1 Term tuple: int2
 1 got token 'int2'
 1 Term tuple: 0
 1 got token '0'
 1 Got atom int2(0) with Gringo-ID 38 and dlvhex-ID ID(0x00000000,  43 atom ordinary_ground)
 1 Transforming 37 rules to DLVHEX
 1 Setting fact 7 (Gringo: 2)
 1 Setting fact 8 (Gringo: 3)
 1 Setting fact 9 (Gringo: 4)
 1 Setting fact 10 (Gringo: 5)
 1 Setting fact 11 (Gringo: 6)
 1 Setting fact 12 (Gringo: 7)
 1 Setting fact 13 (Gringo: 8)
 1 Setting fact 14 (Gringo: 9)
 1 Setting fact 15 (Gringo: 10)
 1 Setting fact 16 (Gringo: 11)
 1 Setting fact 17 (Gringo: 12)
 1 Setting fact 18 (Gringo: 13)
 1 Setting fact 19 (Gringo: 14)
 1 Setting fact 20 (Gringo: 15)
 1 Setting fact 21 (Gringo: 16)
 1 Setting fact 22 (Gringo: 17)
 1 Setting fact 23 (Gringo: 18)
 1 Setting fact 24 (Gringo: 19)
 1 Setting fact 25 (Gringo: 20)
 1 Setting fact 26 (Gringo: 21)
 1 Setting fact 27 (Gringo: 22)
 1 Setting fact 28 (Gringo: 23)
 1 Setting fact 29 (Gringo: 24)
 1 Setting fact 30 (Gringo: 25)
 1 Setting fact 31 (Gringo: 26)
 1 Setting fact 32 (Gringo: 27)
 1 Setting fact 33 (Gringo: 28)
 1 Setting fact 34 (Gringo: 29)
 1 Setting fact 35 (Gringo: 30)
 1 Setting fact 36 (Gringo: 31)
 1 Setting fact 37 (Gringo: 32)
 1 Setting fact 38 (Gringo: 33)
 1 Setting fact 39 (Gringo: 34)
 1 Setting fact 40 (Gringo: 35)
 1 Setting fact 41 (Gringo: 36)
 1 Setting fact 42 (Gringo: 37)
 1 Setting fact 43 (Gringo: 38)
 1 Got the following ground program from Gringo: {op("A","-A").sub("A","A").op("B","-B").sub("B","B").sub("B","C").op("C","-C").sub("C","C").sub("C","A").op("D","-D").sub("D","D").op("-A","A").op("-B","B").op("-C","C").op("-D","D").sub("-A","-A").sub("-B","-B").sub("-C","-B").sub("-C","-C").sub("-A","-C").sub("-D","-D").sub("B","A").sub("-A","-B").conf("A","-A").conf("C","-A").conf("B","-A").conf("B","-B").conf("B","-C").conf("C","-C").conf("D","-D").conf("-A","A").conf("-B","B").conf("-C","B").conf("-A","B").conf("-C","C").conf("-A","C").conf("-D","D").int2(0).

}
 1 Instantiating genuine solver with clasp (min-check: 1)
 1 Contructing atom dependency graph for 0 rules
 1 Computing strongly connected components
 1 Partitioning program
 1 Computing head-cycles of components
 1 Computing e-cycles of components
 1 Program:
EDB: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D"),op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D"),int2(0)}
IDB:

has SCC-decomposition: 
 1 Configure clasp in ASP mode
 1 Interpreting clasp command-line
 1 Found configuration: --configuration=frumpy
 1 Configuring options
 1 Parsing command-line
 1 Assigning specified values
 1 Assigning defaults
 1 Applying options
 1 Finished option parsing
 1 Sending EDB to clasp: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D"),op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D"),int2(0)}
 1 Sending IDB to clasp
 1 SAT instance has 1 variables
 1 Instance is not inconsistent
 1 Setting all 1 variables to frozen
 1 Prepare model enumerator
 1 Finalizing initialization
 1 Problem has 1 variables
 1 Symbol table of optimized program:
 1 H:7 (op("A","-A")) <--> C:0/0
 1 H:8 (sub("A","A")) <--> C:0/0
 1 H:9 (op("B","-B")) <--> C:0/0
 1 H:10 (sub("B","B")) <--> C:0/0
 1 H:11 (sub("B","C")) <--> C:0/0
 1 H:12 (op("C","-C")) <--> C:0/0
 1 H:13 (sub("C","C")) <--> C:0/0
 1 H:14 (sub("C","A")) <--> C:0/0
 1 H:15 (op("D","-D")) <--> C:0/0
 1 H:16 (sub("D","D")) <--> C:0/0
 1 H:17 (op("-A","A")) <--> C:0/0
 1 H:18 (op("-B","B")) <--> C:0/0
 1 H:19 (op("-C","C")) <--> C:0/0
 1 H:20 (op("-D","D")) <--> C:0/0
 1 H:21 (sub("-A","-A")) <--> C:0/0
 1 H:22 (sub("-B","-B")) <--> C:0/0
 1 H:23 (sub("-C","-B")) <--> C:0/0
 1 H:24 (sub("-C","-C")) <--> C:0/0
 1 H:25 (sub("-A","-C")) <--> C:0/0
 1 H:26 (sub("-D","-D")) <--> C:0/0
 1 H:27 (sub("B","A")) <--> C:0/0
 1 H:28 (sub("-A","-B")) <--> C:0/0
 1 H:29 (conf("A","-A")) <--> C:0/0
 1 H:30 (conf("C","-A")) <--> C:0/0
 1 H:31 (conf("B","-A")) <--> C:0/0
 1 H:32 (conf("B","-B")) <--> C:0/0
 1 H:33 (conf("B","-C")) <--> C:0/0
 1 H:34 (conf("C","-C")) <--> C:0/0
 1 H:35 (conf("D","-D")) <--> C:0/0
 1 H:36 (conf("-A","A")) <--> C:0/0
 1 H:37 (conf("-B","B")) <--> C:0/0
 1 H:38 (conf("-C","B")) <--> C:0/0
 1 H:39 (conf("-A","B")) <--> C:0/0
 1 H:40 (conf("-C","C")) <--> C:0/0
 1 H:41 (conf("-A","C")) <--> C:0/0
 1 H:42 (conf("-D","D")) <--> C:0/0
 1 H:43 (int2(0)) <--> C:0/0
 1 hexToClasp.size()=44, symTab.size()=37
 1 Prepare solver object
 1 Adding post propagator
 1 Initializing assignment extraction
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Extracting full interpretation from clasp
 1 Extracting clasp interpretation
 1 Literal C:0/0@0,H:7:op("A","-A") is true
 1 Literal C:0/0@0,H:8:sub("A","A") is true
 1 Literal C:0/0@0,H:9:op("B","-B") is true
 1 Literal C:0/0@0,H:10:sub("B","B") is true
 1 Literal C:0/0@0,H:11:sub("B","C") is true
 1 Literal C:0/0@0,H:12:op("C","-C") is true
 1 Literal C:0/0@0,H:13:sub("C","C") is true
 1 Literal C:0/0@0,H:14:sub("C","A") is true
 1 Literal C:0/0@0,H:15:op("D","-D") is true
 1 Literal C:0/0@0,H:16:sub("D","D") is true
 1 Literal C:0/0@0,H:17:op("-A","A") is true
 1 Literal C:0/0@0,H:18:op("-B","B") is true
 1 Literal C:0/0@0,H:19:op("-C","C") is true
 1 Literal C:0/0@0,H:20:op("-D","D") is true
 1 Literal C:0/0@0,H:21:sub("-A","-A") is true
 1 Literal C:0/0@0,H:22:sub("-B","-B") is true
 1 Literal C:0/0@0,H:23:sub("-C","-B") is true
 1 Literal C:0/0@0,H:24:sub("-C","-C") is true
 1 Literal C:0/0@0,H:25:sub("-A","-C") is true
 1 Literal C:0/0@0,H:26:sub("-D","-D") is true
 1 Literal C:0/0@0,H:27:sub("B","A") is true
 1 Literal C:0/0@0,H:28:sub("-A","-B") is true
 1 Literal C:0/0@0,H:29:conf("A","-A") is true
 1 Literal C:0/0@0,H:30:conf("C","-A") is true
 1 Literal C:0/0@0,H:31:conf("B","-A") is true
 1 Literal C:0/0@0,H:32:conf("B","-B") is true
 1 Literal C:0/0@0,H:33:conf("B","-C") is true
 1 Literal C:0/0@0,H:34:conf("C","-C") is true
 1 Literal C:0/0@0,H:35:conf("D","-D") is true
 1 Literal C:0/0@0,H:36:conf("-A","A") is true
 1 Literal C:0/0@0,H:37:conf("-B","B") is true
 1 Literal C:0/0@0,H:38:conf("-C","B") is true
 1 Literal C:0/0@0,H:39:conf("-A","B") is true
 1 Literal C:0/0@0,H:40:conf("-C","C") is true
 1 Literal C:0/0@0,H:41:conf("-A","C") is true
 1 Literal C:0/0@0,H:42:conf("-D","D") is true
 1 Literal C:0/0@0,H:43:int2(0) is true
 1 ClaspSolver::getNextModel
 1 Model enumeration algorithm: (ini)
 1 Starting new search
 1 Adding step literal to assumptions
 1 Starting enumerator with 1 assumptions (including step literal)
 1 ExternalPropagator::propagateFixpoint
 1 Will not propagate to HEX
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Nothing more to propagate
 1 ExternalPropagator::propagateFixpoint
 1 Will not propagate to HEX
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Nothing more to propagate
 1 Model enumeration algorithm: (sat)
 1 Instance is satisfiable wrt. assumptions
 1 Model enumeration algorithm: (sol)
 1 Solve for next model
 1 ExternalPropagator::propagateFixpoint
 1 Will not propagate to HEX
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Nothing more to propagate
 1 ExternalPropagator::isModel
 1 Must propagate to HEX
 1 ExternalPropagator: Calling HEX-Propagator
 1 Extracting clasp interpretation
 1 Literal C:0/0@0,H:7:op("A","-A") is true
 1 Literal C:0/0@0,H:8:sub("A","A") is true
 1 Literal C:0/0@0,H:9:op("B","-B") is true
 1 Literal C:0/0@0,H:10:sub("B","B") is true
 1 Literal C:0/0@0,H:11:sub("B","C") is true
 1 Literal C:0/0@0,H:12:op("C","-C") is true
 1 Literal C:0/0@0,H:13:sub("C","C") is true
 1 Literal C:0/0@0,H:14:sub("C","A") is true
 1 Literal C:0/0@0,H:15:op("D","-D") is true
 1 Literal C:0/0@0,H:16:sub("D","D") is true
 1 Literal C:0/0@0,H:17:op("-A","A") is true
 1 Literal C:0/0@0,H:18:op("-B","B") is true
 1 Literal C:0/0@0,H:19:op("-C","C") is true
 1 Literal C:0/0@0,H:20:op("-D","D") is true
 1 Literal C:0/0@0,H:21:sub("-A","-A") is true
 1 Literal C:0/0@0,H:22:sub("-B","-B") is true
 1 Literal C:0/0@0,H:23:sub("-C","-B") is true
 1 Literal C:0/0@0,H:24:sub("-C","-C") is true
 1 Literal C:0/0@0,H:25:sub("-A","-C") is true
 1 Literal C:0/0@0,H:26:sub("-D","-D") is true
 1 Literal C:0/0@0,H:27:sub("B","A") is true
 1 Literal C:0/0@0,H:28:sub("-A","-B") is true
 1 Literal C:0/0@0,H:29:conf("A","-A") is true
 1 Literal C:0/0@0,H:30:conf("C","-A") is true
 1 Literal C:0/0@0,H:31:conf("B","-A") is true
 1 Literal C:0/0@0,H:32:conf("B","-B") is true
 1 Literal C:0/0@0,H:33:conf("B","-C") is true
 1 Literal C:0/0@0,H:34:conf("C","-C") is true
 1 Literal C:0/0@0,H:35:conf("D","-D") is true
 1 Literal C:0/0@0,H:36:conf("-A","A") is true
 1 Literal C:0/0@0,H:37:conf("-B","B") is true
 1 Literal C:0/0@0,H:38:conf("-C","B") is true
 1 Literal C:0/0@0,H:39:conf("-A","B") is true
 1 Literal C:0/0@0,H:40:conf("-C","C") is true
 1 Literal C:0/0@0,H:41:conf("-A","C") is true
 1 Literal C:0/0@0,H:42:conf("-D","D") is true
 1 Literal C:0/0@0,H:43:int2(0) is true
 1 Partial assignment: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D"),op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D"),int2(0)} (assigned: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D"),op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D"),int2(0)})
Incrementally extracted partial assignment: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D"),op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D"),int2(0)} (assigned: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D"),op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D"),int2(0)})
Changed atoms: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D"),op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D"),int2(0)}
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Model enumeration algorithm: (com)
 1 Committing model
 1 Model enumeration algorithm: (ext)
 1 Extract model model
 1 Projected to {op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D")}
 1 Model enumeration algorithm: (ret)
 1 Returning model
 1 Statistics:
Guesses: 0
Conflicts: 0
Models: 1
 1 running debug checks
 1 =OnlineModelBuilder<...>::createIModelFromPredecessorOModels(1)
 1 gSI =getSuccessorIntersection(1,1)
 1 gSI one-dependency shortcut: simply finding corresponding model
 1 gSI no successors
 1 running debug checks
 1 got model#0:{op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D")}
 1 New global optimum: 
 1 requesting imodel
 1 =OnlineModelBuilder<...>::getNextIModel(1)
 1 uprops: (no ModelGeneratorFactory)
 1 mbprops: currentmg =      null, needInput = 1, orefcount = 0, imodel =  0xf395c0, currentisuccessor = unset
 1 =OnlineModelBuilder<...>::ensureModelIncrement(1,0)
 1 ucursor = 0 with mbprops = {currentmg =  0xf29b90, needInput = 0, orefcount = 1, imodel =  0xf2b5e0, currentisuccessor = 0xf32370 -> 0xf2b5e0}
 1 =OnlineModelBuilder<...>::getNextOModel(0):
 1 uprops = op(Y,X) :- op(X,Y).
sub(X,Z) :- sub(X,Y), sub(Y,Z).
sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y).
conf(X,Y1) :- sub(X,Y), op(Y,Y1).
conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1).
inv(Y,X) :- inv(X,Y).
confref(X) :- conf(X,Y), inv(X,Y).
 1 mbprops = currentmg =  0xf29b90, needInput = 0, orefcount = 1, imodel =  0xf2b5e0, currentisuccessor = 0xf32370 -> 0xf2b5e0
 1 =OnlineModelBuilder<...>::advanceOModelForIModel(0)
 1 imodel has properties dummy interpretation=null
 1 =createNextModel(0)
 1 ClaspSolver::getNextModel
 1 Model enumeration algorithm: (cos)
 1 Committing symmetric model
 1 No more symmetric models, going to update
 1 Model enumeration algorithm: (upd)
 1 Updating enumerator
 1 Model enumeration algorithm: (sol)
 1 Solve for next model
 1 Model enumeration algorithm: (ret)
 1 Returning empty model
 1 Statistics:
Guesses: 0
Conflicts: 0
Models: 1
 1 Final Statistics:
Guesses: 0
Conflicts: 0
Models: 1
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 =OnlineModelBuilder<...>::getNextIModel(0)
 1 uprops: op(Y,X) :- op(X,Y).
sub(X,Z) :- sub(X,Y), sub(Y,Z).
sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y).
conf(X,Y1) :- sub(X,Y), op(Y,Y1).
conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1).
inv(Y,X) :- inv(X,Y).
confref(X) :- conf(X,Y), inv(X,Y).
 1 mbprops: currentmg =      null, needInput = 0, orefcount = 0, imodel =  0xf2b5e0, currentisuccessor = unset
 1 unit needs no input
 1 Classification: {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D"),op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D")}
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 ~EvalUnitModels()@0xf29f80
 1 ~EvalUnitModels()@0xf29f90
 1 ~EvalUnitModels()@0xf29fa0
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 Destructing component graph 0xf22d70
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 201 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 2 (it should be 1)
 1 LSS: Using the following model CM of the classification program: CM = {op("A","-A"),sub("A","A"),op("B","-B"),sub("B","B"),sub("B","C"),op("C","-C"),sub("C","C"),sub("C","A"),op("D","-D"),sub("D","D"),op("-A","A"),op("-B","B"),op("-C","C"),op("-D","D"),sub("-A","-A"),sub("-B","-B"),sub("-C","-B"),sub("-C","-C"),sub("-A","-C"),sub("-D","-D"),sub("B","A"),sub("-A","-B"),conf("A","-A"),conf("C","-A"),conf("B","-A"),conf("B","-B"),conf("B","-C"),conf("C","-C"),conf("D","-D"),conf("-A","A"),conf("-B","B"),conf("-C","B"),conf("-A","B"),conf("-C","C"),conf("-A","C"),conf("-D","D")}
 1 LSS: query is a concept
 1 Storing output atom which will be part of any support set
 1 Query is a concept
 1 gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 gACS found ID(0x10c00000,  49 term constant)
 1 stored oatom OrdinaryAtom(1c00000,'aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O)',[ID(0x10c00000,  49 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  47 term constant),ID(0x12000000,  56 term variable)]) which got ID(0x01c00000,  20 atom ordinary_nonground)
 1 LSS: Output atom is aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O)
 1 LSS: Analyzing input to the external atom
 1 LSS: Analyzing query and Abox
 1 Query is a concept
 1 stored oatom OrdinaryAtom(1a00000,'aux_o_0_0("A",O)',[ID(0x10800000,  39 term constant),ID(0x10000000,  47 term constant),ID(0x12000000,  56 term variable)]) which got ID(0x01a00000,  21 atom ordinary_nonground)
 1 LSS: --> Learned support set: { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), aux_o_0_0("A",O) }
 1 Hash of { 20, 21 } is 845136818527203
 1 Adding with index 0
 1 LSS: Checking if sub(C, "A") is true in the classification assignment (for some C')
 1 LSS: Current classification atom: op("A","-A")
 1 LSS: Current classification atom: sub("A","A")
 1 LSS: Found a match with C="A"
 1 LSS: (this is not form exR)
 1 LSS: --> Learned support set: { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), aux_o_0_0("A",O) }
 1 Hash of { 20, 21 } is 845136818527203
 1 Already contained with index 0
 1 LSS: Current classification atom: op("B","-B")
 1 LSS: Current classification atom: sub("B","B")
 1 LSS: Current classification atom: sub("B","C")
 1 LSS: Current classification atom: op("C","-C")
 1 LSS: Current classification atom: sub("C","C")
 1 LSS: Current classification atom: sub("C","A")
 1 LSS: Found a match with C="C"
 1 LSS: (this is not form exR)
 1 stored oatom OrdinaryAtom(1a00000,'aux_o_0_0("C",O)',[ID(0x10800000,  39 term constant),ID(0x10000000,  60 term constant),ID(0x12000000,  56 term variable)]) which got ID(0x01a00000,  22 atom ordinary_nonground)
 1 LSS: --> Learned support set: { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), aux_o_0_0("C",O) }
 1 Hash of { 20, 22 } is 845136818527202
 1 Adding with index 1
 1 LSS: Current classification atom: op("D","-D")
 1 LSS: Current classification atom: sub("D","D")
 1 LSS: Current classification atom: op("-A","A")
 1 LSS: Current classification atom: op("-B","B")
 1 LSS: Current classification atom: op("-C","C")
 1 LSS: Current classification atom: op("-D","D")
 1 LSS: Current classification atom: sub("-A","-A")
 1 LSS: Current classification atom: sub("-B","-B")
 1 LSS: Current classification atom: sub("-C","-B")
 1 LSS: Current classification atom: sub("-C","-C")
 1 LSS: Current classification atom: sub("-A","-C")
 1 LSS: Current classification atom: sub("-D","-D")
 1 LSS: Current classification atom: sub("B","A")
 1 LSS: Found a match with C="B"
 1 LSS: (this is not form exR)
 1 stored oatom OrdinaryAtom(1a00000,'aux_o_0_0("B",O)',[ID(0x10800000,  39 term constant),ID(0x10000000,  59 term constant),ID(0x12000000,  56 term variable)]) which got ID(0x01a00000,  23 atom ordinary_nonground)
 1 LSS: --> Learned support set: { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), aux_o_0_0("B",O) }
 1 Hash of { 20, 23 } is 845136818527201
 1 Adding with index 2
 1 LSS: Current classification atom: sub("-A","-B")
 1 LSS: Current classification atom: conf("A","-A")
 1 LSS: Current classification atom: conf("C","-A")
 1 LSS: Current classification atom: conf("B","-A")
 1 LSS: Current classification atom: conf("B","-B")
 1 LSS: Current classification atom: conf("B","-C")
 1 LSS: Current classification atom: conf("C","-C")
 1 LSS: Current classification atom: conf("D","-D")
 1 LSS: Current classification atom: conf("-A","A")
 1 LSS: Current classification atom: conf("-B","B")
 1 LSS: Current classification atom: conf("-C","B")
 1 LSS: Current classification atom: conf("-A","B")
 1 LSS: Current classification atom: conf("-C","C")
 1 LSS: Current classification atom: conf("-A","C")
 1 LSS: Current classification atom: conf("-D","D")
 1 LSS: Number of learned nogoods: 3
 1 EL: LSSO: Filter out irrelevant support sets
 1 EL: LSSO: Abox predicates are:
 1 stored term Term(simple.owl) which got ID(0x10000000,  68 term constant)
 1 prepareOntology
 1 Loading ontologysimple.owl
 1 Assigning ontology name
 1 Reading file simple.owl
 1 Extracting ontology namespace
 1 Namespace is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31 (path: /home/dasha/Documents/software/dlliteplugin/benchmarks/inconsistent/DLLite/taxi/instances/simple.owl, version: )
 1 Submitting ontology with Abox to reasoning kernel
 1 Consistency of KB: 1
 1 Analyzing ontology (Tbox and Abox)
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31 / rdf:type / owl:Ontology
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#A / rdf:type / owl:Class
 1 Found concept: "A"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#B / rdf:type / owl:Class
 1 Found concept: "B"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#B / rdfs:subClassOf / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C / rdf:type / owl:Class
 1 Found concept: "C"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C / rdfs:subClassOf / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#A
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#D / rdf:type / owl:Class
 1 Found concept: "D"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / owl:NamedIndividual
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#A
 1 NS: Subject is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 NS: After storage: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 NS: Found individual: "a"
 1 NS: Found concept assertion: A("a")
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#C
 1 NS: Subject is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 NS: After storage: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 NS: Found individual: "a"
 1 NS: Found concept assertion: C("a")
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#D
 1 NS: Subject is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 NS: After storage: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-31#a
 1 NS: Found individual: "a"
 1 NS: Found concept assertion: D("a")
 1 Concept assertions: {aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a")}
 1 "A" with ID(0x10000000,  47 term constant)
 1 "C" with ID(0x10000000,  60 term constant)
 1 "D" with ID(0x10000000,  61 term constant)
 1 LSSO: consider support set: { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), aux_o_0_0("A",O) }
 1 LSSO: is it of size >3? 2
 1 LSSO: no
 1 LSSO: is aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O) a guard with predicate not occurring in ABox?
 1 LSSO: check for "simple.owl" with ID(0x10000000,  42 term constant)
 1 LSSO: no
 1 LSSO: is aux_o_0_0("A",O) a guard with predicate not occurring in ABox?
 1 LSSO: check for "A" with ID(0x10000000,  47 term constant)
 1 LSSO: no
 1 Hash of { 20, 21 } is 845136818527203
 1 Adding with index 0
 1 LSSO: leave this support set
 1 LSSO: consider support set: { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), aux_o_0_0("C",O) }
 1 LSSO: is it of size >3? 2
 1 LSSO: no
 1 LSSO: is aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O) a guard with predicate not occurring in ABox?
 1 LSSO: check for "simple.owl" with ID(0x10000000,  42 term constant)
 1 LSSO: no
 1 LSSO: is aux_o_0_0("C",O) a guard with predicate not occurring in ABox?
 1 LSSO: check for "C" with ID(0x10000000,  60 term constant)
 1 LSSO: no
 1 Hash of { 20, 22 } is 845136818527202
 1 Adding with index 1
 1 LSSO: leave this support set
 1 LSSO: consider support set: { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), aux_o_0_0("B",O) }
 1 LSSO: is it of size >3? 2
 1 LSSO: no
 1 LSSO: is aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O) a guard with predicate not occurring in ABox?
 1 LSSO: check for "simple.owl" with ID(0x10000000,  42 term constant)
 1 LSSO: no
 1 LSSO: is aux_o_0_0("B",O) a guard with predicate not occurring in ABox?
 1 LSSO: check for "B" with ID(0x10000000,  59 term constant)
 1 LSSO: yes
 1 LSSO: support set is marked for elimination
 1 LSSO: if current support set is marked, eliminate it
 1 Deleting nogood { 20, 23 } (index: 2)
 1 LSSO: Number of support sets after elimination: 2
 1 EL: LSS: Finished support set learning
 1 RMG: number of learnt support sets: 2
 1 RMG: checking support set { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), aux_o_0_0("A",O) }
 1 RMG: checking literal aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O)
 1 RMG: checking literal aux_o_0_0("A",O)
 1 RMG: There are no ordinary atoms in support set 
 1 RMG: RULE: (bar_aux_o(C,X)):-aux_o(C,X), n_e_a(Q,O). 
 1 RMG: Check whether there any reasons for not deleting A
 1 RMG: the predicate A is in 
 1 RMG: the ontology predicate "A" is allowed for deletion
 1 RMG: RULE: bar_aux_o(C,X):-aux_o(C,X), n_e_a(Q,O). 
 1 stored oatom OrdinaryAtom(1800000,'aux_o_0_1("A",O)',[ID(0x10800000,  55 term constant),ID(0x10000000,  47 term constant),ID(0x12000000,  56 term variable)]) which got ID(0x01800000,  24 atom ordinary_nonground)
 1 gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 gACS found ID(0x10c00000,  49 term constant)
 1 RMG: RULE: Adding rule: aux_o_0_1("A",O) :- aux_o_0_0("A",O), aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O).
 1 RMG: RULE: supp_e_a(Q,O):-aux_o(C,X),e_a(Q,O), not bar_aux_o(C,X).
 1 gACS getAuxiliaryConstantSymbol for o ID(0x06000000,   0 atom external)
 1 gACS created symbol 'aux_o_6000000_0'
 1 gACS PM::aP/0xe88180 adding predicate ID(0x10800000,  69 term constant), knownAddresses was 0
 1 gACS returning id ID(0x10800000,  69 term constant) for aux symbol aux_o_6000000_0
 1 stored oatom OrdinaryAtom(1800000,'aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O)',[ID(0x10800000,  69 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  47 term constant),ID(0x12000000,  56 term variable)]) which got ID(0x01800000,  25 atom ordinary_nonground)
 1 gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 gACS found ID(0x10c00000,  48 term constant)
 1 stored oatom OrdinaryAtom(1800000,'aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O)',[ID(0x10c00000,  48 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  47 term constant),ID(0x12000000,  56 term variable)]) which got ID(0x01800000,  26 atom ordinary_nonground)
 1 RMG: RULE: Adding rule: aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O) :- aux_o_0_0("A",O), aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_0_1("A",O).
 1 RMG: RULE: :-e_a(Q,O),not supp_e_a(Q,O).
 1 gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 gACS found ID(0x10c00000,  48 term constant)
 1 gACS getAuxiliaryConstantSymbol for o ID(0x06000000,   0 atom external)
 1 gACS found ID(0x10800000,  69 term constant)
 1 RMG: RULE: Adding rule: :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O).
 1 RMG: checking support set { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), aux_o_0_0("C",O) }
 1 RMG: checking literal aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O)
 1 RMG: checking literal aux_o_0_0("C",O)
 1 RMG: There are no ordinary atoms in support set 
 1 RMG: RULE: (bar_aux_o(C,X)):-aux_o(C,X), n_e_a(Q,O). 
 1 RMG: Check whether there any reasons for not deleting C
 1 RMG: the predicate C is in 
 1 RMG: the ontology predicate "C" is allowed for deletion
 1 RMG: RULE: bar_aux_o(C,X):-aux_o(C,X), n_e_a(Q,O). 
 1 stored oatom OrdinaryAtom(1800000,'aux_o_0_1("C",O)',[ID(0x10800000,  55 term constant),ID(0x10000000,  60 term constant),ID(0x12000000,  56 term variable)]) which got ID(0x01800000,  27 atom ordinary_nonground)
 1 gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 gACS found ID(0x10c00000,  49 term constant)
 1 RMG: RULE: Adding rule: aux_o_0_1("C",O) :- aux_o_0_0("C",O), aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O).
 1 RMG: RULE: supp_e_a(Q,O):-aux_o(C,X),e_a(Q,O), not bar_aux_o(C,X).
 1 gACS getAuxiliaryConstantSymbol for o ID(0x06000000,   0 atom external)
 1 gACS found ID(0x10800000,  69 term constant)
 1 gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 gACS found ID(0x10c00000,  48 term constant)
 1 RMG: RULE: Adding rule: aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O) :- aux_o_0_0("C",O), aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_0_1("C",O).
 1 RMG: RULE: :-e_a(Q,O),not supp_e_a(Q,O).
 1 gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 gACS found ID(0x10c00000,  48 term constant)
 1 gACS getAuxiliaryConstantSymbol for o ID(0x06000000,   0 atom external)
 1 gACS found ID(0x10800000,  69 term constant)
 1 RMG: RULE: Adding rule: :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O).
 1 RMG: Adding Abox
 1  Program edb before adding ABox {c("a")}
 1 prepareOntology
 1 Accessing cached ontology simple.owl
 1 RMG: Program edb after adding ABox {c("a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a")}
 1 RMG: program idb: 
 1 RMG: :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X), c(X).
 1 RMG: aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) :- c(X).
 1 RMG: aux_o_0_1("A",O) :- aux_o_0_0("A",O), aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O).
 1 RMG: aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O) :- aux_o_0_0("A",O), aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_0_1("A",O).
 1 RMG: :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O).
 1 RMG: aux_o_0_1("C",O) :- aux_o_0_0("C",O), aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O).
 1 RMG: aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O) :- aux_o_0_0("C",O), aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_0_1("C",O).
 1 RMG: :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O).
 1 Instantiating genuine grounder with gringo
 1 Creating new term with name 'int4'
 1 stored term Term(int4) which got ID(0x10000000,  70 term constant)
 1 Creating new term with name 'anonymous5'
 1 stored term Term(anonymous5) which got ID(0x10000000,  71 term constant)
 1 Sending the following input to Gringo: {{c("a").aux_o_0_0("A","a").aux_o_0_0("C","a").aux_o_0_0("D","a").
 :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X), c(X).
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) | aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) :- c(X).
aux_o_0_1("A",O) :- aux_o_0_0("A",O), aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O).
aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O) :- aux_o_0_0("A",O), aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_0_1("A",O).
 :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O).
aux_o_0_1("C",O) :- aux_o_0_0("C",O), aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",O).
aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O) :- aux_o_0_0("C",O), aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_0_1("C",O).
 :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",O), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A",O).
int4(0..0).}}
 1 Got atom aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") with Gringo-ID 6 and dlvhex-ID ID(0x00c00000,   1 atom ordinary_ground)
 1 Got atom c("a") with Gringo-ID 2 and dlvhex-ID ID(0x00000000,   0 atom ordinary_ground)
 1 Got atom aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") with Gringo-ID 8 and dlvhex-ID ID(0x00c00000,   2 atom ordinary_ground)
 1 Got atom aux_o_0_0("A","a") with Gringo-ID 3 and dlvhex-ID ID(0x00a00000,   4 atom ordinary_ground)
 1 Got atom aux_o_0_0("C","a") with Gringo-ID 4 and dlvhex-ID ID(0x00a00000,   5 atom ordinary_ground)
 1 Got atom aux_o_0_0("D","a") with Gringo-ID 5 and dlvhex-ID ID(0x00a00000,   6 atom ordinary_ground)
 1 parsing gringo ground atom 'aux_o_0_1("A","a")'
 1 Term tuple: aux_o_0_1
 1 got token 'aux_o_0_1'
 1 Term tuple: "A"
 1 got token '"A"'
 1 Term tuple: "a"
 1 got token '"a"'
 1 Got atom aux_o_0_1("A","a") with Gringo-ID 7 and dlvhex-ID ID(0x00800000,  44 atom ordinary_ground)
 1 parsing gringo ground atom 'aux_o_0_1("C","a")'
 1 Term tuple: aux_o_0_1
 1 got token 'aux_o_0_1'
 1 Term tuple: "C"
 1 got token '"C"'
 1 Term tuple: "a"
 1 got token '"a"'
 1 Got atom aux_o_0_1("C","a") with Gringo-ID 10 and dlvhex-ID ID(0x00800000,  45 atom ordinary_ground)
 1 parsing gringo ground atom 'aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a")'
 1 Term tuple: aux_o_6000000_0
 1 got token 'aux_o_6000000_0'
 1 Term tuple: "simple.owl"
 1 got token '"simple.owl"'
 1 Term tuple: cp
 1 got token 'cp'
 1 Term tuple: cn
 1 got token 'cn'
 1 Term tuple: rp
 1 got token 'rp'
 1 Term tuple: rn
 1 got token 'rn'
 1 Term tuple: "A"
 1 got token '"A"'
 1 Term tuple: "a"
 1 got token '"a"'
 1 Got atom aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") with Gringo-ID 9 and dlvhex-ID ID(0x00800000,  46 atom ordinary_ground)
 1 parsing gringo ground atom 'int4(0)'
 1 Term tuple: int4
 1 got token 'int4'
 1 Term tuple: 0
 1 got token '0'
 1 Got atom int4(0) with Gringo-ID 11 and dlvhex-ID ID(0x00000000,  47 atom ordinary_ground)
 1 Transforming 13 rules to DLVHEX
 1 Setting fact 0 (Gringo: 2)
 1 Setting fact 4 (Gringo: 3)
 1 Setting fact 5 (Gringo: 4)
 1 Setting fact 6 (Gringo: 5)
 1 Adding rule ID(0x31000000,  12 rule constraint)
 1 Adding rule ID(0x30000000,  19 rule regular)
 1 Adding rule ID(0x30000000,  20 rule regular)
 1 Adding rule ID(0x30000000,  21 rule regular)
 1 Adding rule ID(0x30000000,  22 rule regular)
 1 Adding rule ID(0x31000000,  23 rule constraint)
 1 Adding rule ID(0x31000000,  23 rule constraint)
 1 Setting fact 47 (Gringo: 11)
 1 Adding rule ID(0x30100000,  13 rule regular)
 1 Got the following ground program from Gringo: {c("a").aux_o_0_0("A","a").aux_o_0_0("C","a").aux_o_0_0("D","a").int4(0).
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
aux_o_0_1("A","a") :- aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_0_1("A","a").
aux_o_0_1("C","a") :- aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_0_1("C","a").
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a").
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a").
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
}
 1 RMG: after grounding
 1 sEA  = ExternalAtomMask::setEAtom for &cDL["simple.owl",cp,cn,rp,rn,"A"](X)  (aux=ID_FAIL) and 8 rules in groundidb
 1 sEA gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  48 term constant)
 1 sEA gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  49 term constant)
 1 sEA Adding input predicate cp
 1 sEA PM::aP/0xeabbe0 adding predicate ID(0x10000000,  43 term constant), knownAddresses was 0
 1 sEA Adding input predicate cn
 1 sEA PM::aP/0xeabbe0 adding predicate ID(0x10000000,  44 term constant), knownAddresses was 0
 1 sEA Adding input predicate rp
 1 sEA PM::aP/0xeabbe0 adding predicate ID(0x10000000,  45 term constant), knownAddresses was 0
 1 sEA Adding input predicate rn
 1 sEA PM::aP/0xeabbe0 adding predicate ID(0x10000000,  46 term constant), knownAddresses was 0
 1 sEA preparedTuple is <aux_r_10000000_e, "simple.owl", cp, cn, rp, rn, "A", X>
 1 sEA Watching 2 output atoms: {aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")}
 1 sEA gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  48 term constant)
 1 sEA gACS getAuxiliaryConstantSymbol for n ID(0x10000000,  14 term constant)
 1 sEA gACS found ID(0x10c00000,  49 term constant)
 1 sEA Output atom aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") matches the external atom
 1 sEA Output atom aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") matches the external atom
 1 ExternalAtomMask::updateMask
 1 PM::uM(do)/0xeabbe0 = PredicateMask::updateMask (need to update) for predicates {43,44,45,46}
 1 PM::uM(do)/0xeabbe0 need to inspect 48 missing bits
 1 PM::uM(do)/0xeabbe0 relevant predicate constants are cp, cn, rp, rn, 
 1 PM::uM(do)/0xeabbe0 updateMask created new set of relevant ogatoms: {aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")} and knownAddresses is 48
 1 Auxiliary 1 maps to ID(0x06000000,   0 atom external)
 1 Auxiliary 2 maps to ID(0x06000000,   0 atom external)
 1 Contructing atom dependency graph for 8 rules
 1 Adding ordinary edges
 1 Adding e-edges
 1 EA::uM/0xea8d60 ENTRY
 1 EA::uM/0xea8d60 PM::uM(do)/0xea8940 = PredicateMask::updateMask (need to update) for predicates {43,44,45,46}
 1 EA::uM/0xea8d60 PM::uM(do)/0xea8940 need to inspect 44 missing bits
 1 EA::uM/0xea8d60 PM::uM(do)/0xea8940 relevant predicate constants are cp, cn, rp, rn, 
 1 EA::uM/0xea8d60 PM::uM(do)/0xea8940 updateMask created new set of relevant ogatoms: {} and knownAddresses is 48
 1 EA::uM/0xea8d60 EXIT
 1 Adding ordinary edges
 1 Adding e-edges
 1 EA::uM/0xea8d60 ENTRY
 1 EA::uM/0xea8d60 EXIT
 1 Adding ordinary edges
 1 Adding e-edges
 1 EA::uM/0xea8d60 ENTRY
 1 EA::uM/0xea8d60 EXIT
 1 Adding ordinary edges
 1 Adding e-edges
 1 EA::uM/0xea8d60 ENTRY
 1 EA::uM/0xea8d60 EXIT
 1 Adding ordinary edges
 1 Adding e-edges
 1 EA::uM/0xea8d60 ENTRY
 1 EA::uM/0xea8d60 EXIT
 1 Adding ordinary edges
 1 Adding e-edges
 1 EA::uM/0xea8d60 ENTRY
 1 EA::uM/0xea8d60 EXIT
 1 Adding ordinary edges
 1 Adding e-edges
 1 EA::uM/0xea8d60 ENTRY
 1 EA::uM/0xea8d60 EXIT
 1 Adding ordinary edges
 1 Adding e-edges
 1 Computing strongly connected components
 1 Component 0: 44
 1 Component 1: 46
 1 Component 2: 45
 1 Component 3: 1
 1 Component 4: 2
 1 Partitioning program
 1 Partition 0
 1 aux_o_0_1("A","a") :- aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Partition 1
 1 aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_0_1("A","a").
 1 aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_0_1("C","a").
 1 Partition 2
 1 aux_o_0_1("C","a") :- aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Partition 3
 1 aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Partition 4
 1 aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Computing head-cycles of components
 1 Component 0: 0
 1 Component 1: 0
 1 Component 2: 0
 1 Component 3: 0
 1 Component 4: 0
 1 Computing e-cycles of components
 1 Program:
EDB: {c("a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),int4(0)}
IDB:
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
aux_o_0_1("A","a") :- aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_0_1("A","a").
aux_o_0_1("C","a") :- aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_0_1("C","a").
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a").
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a").
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").

has SCC-decomposition: { aux_o_0_1("A","a") } (HC: 0, EC: 0) { aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") } (HC: 0, EC: 0) { aux_o_0_1("C","a") } (HC: 0, EC: 0) { aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") } (HC: 0, EC: 0) { aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") } (HC: 0, EC: 0) 
 1 RMG: annotated ground program is constructed
 1 Instantiating genuine solver with clasp (min-check: 0)
 1 Configure clasp in ASP mode
 1 Interpreting clasp command-line
 1 Found configuration: --configuration=frumpy
 1 Configuring options
 1 Parsing command-line
 1 Assigning specified values
 1 Assigning defaults
 1 Applying options
 1 Finished option parsing
 1 Sending EDB to clasp: {c("a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),int4(0)}
 1 Sending IDB to clasp
 1 sendRuleToClasp :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Adding to body: 8
 1 sendRuleToClasp aux_o_0_1("A","a") :- aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Adding to head: 9
 1 Adding to body: 10
 1 sendRuleToClasp aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_0_1("A","a").
 1 Adding to head: 11
 1 Adding to body: 8
 1 Adding to body: !9
 1 sendRuleToClasp aux_o_0_1("C","a") :- aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Adding to head: 12
 1 Adding to body: 10
 1 sendRuleToClasp aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_0_1("C","a").
 1 Adding to head: 11
 1 Adding to body: 8
 1 Adding to body: !12
 1 sendRuleToClasp :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a").
 1 Adding to body: 8
 1 Adding to body: !11
 1 sendRuleToClasp :- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"), not aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a").
 1 Adding to body: 8
 1 Adding to body: !11
 1 sendRuleToClasp aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a").
 1 Adding to head: 8
 1 Adding to head: 10
 1 SAT instance has 1 variables
 1 Instance is not inconsistent
 1 Setting all 1 variables to frozen
 1 Prepare model enumerator
 1 Finalizing initialization
 1 Problem has 1 variables
 1 Symbol table of optimized program:
 1 H:0 (c("a")) <--> C:0/0
 1 H:4 (aux_o_0_0("A","a")) <--> C:0/0
 1 H:5 (aux_o_0_0("C","a")) <--> C:0/0
 1 H:6 (aux_o_0_0("D","a")) <--> C:0/0
 1 H:47 (int4(0)) <--> C:0/0
 1 H:1 (aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")) <--> C:1/!0
 1 H:44 (aux_o_0_1("A","a")) <--> C:0/0
 1 H:2 (aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a")) <--> C:0/0
 1 H:46 (aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a")) <--> C:1/!0
 1 H:45 (aux_o_0_1("C","a")) <--> C:0/0
 1 hexToClasp.size()=48, symTab.size()=10
 1 Prepare solver object
 1 Adding post propagator
 1 Initializing assignment extraction
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:1/!0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:1/!0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Extracting full interpretation from clasp
 1 Extracting clasp interpretation
 1 Literal C:0/0@0,H:0:c("a") is true
 1 Literal C:0/0@0,H:4:aux_o_0_0("A","a") is true
 1 Literal C:0/0@0,H:5:aux_o_0_0("C","a") is true
 1 Literal C:0/0@0,H:6:aux_o_0_0("D","a") is true
 1 Literal C:0/0@0,H:47:int4(0) is true
 1 Literal C:1/!0@0,H:1:aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") is false
 1 Literal C:0/0@0,H:44:aux_o_0_1("A","a") is true
 1 Literal C:0/0@0,H:2:aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") is true
 1 Literal C:1/!0@0,H:46:aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") is false
 1 Literal C:0/0@0,H:45:aux_o_0_1("C","a") is true
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:1/!0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 RMG: after creating a nogood grounder
 1 Skipping component 0 because it contains neither head-cycles nor e-cycles
 1 Skipping component 1 because it contains neither head-cycles nor e-cycles
 1 Skipping component 2 because it contains neither head-cycles nor e-cycles
 1 Skipping component 3 because it contains neither head-cycles nor e-cycles
 1 Skipping component 4 because it contains neither head-cycles nor e-cycles
 1 RMG: RepairModelGenerator constructor is finished
 1 RMG: asking for next model
 1 ClaspSolver::getNextModel
 1 Model enumeration algorithm: (ini)
 1 Starting new search
 1 Adding step literal to assumptions
 1 Starting enumerator with 1 assumptions (including step literal)
 1 ExternalPropagator::propagateFixpoint
 1 Will not propagate to HEX
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Nothing more to propagate
 1 ExternalPropagator::propagateFixpoint
 1 Will not propagate to HEX
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Nothing more to propagate
 1 Model enumeration algorithm: (sat)
 1 Instance is satisfiable wrt. assumptions
 1 Model enumeration algorithm: (sol)
 1 Solve for next model
 1 ExternalPropagator::propagateFixpoint
 1 Will not propagate to HEX
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Nothing more to propagate
 1 ExternalPropagator::isModel
 1 Must propagate to HEX
 1 ExternalPropagator: Calling HEX-Propagator
 1 Extracting clasp interpretation
 1 Literal C:0/0@0,H:0:c("a") is true
 1 Literal C:0/0@0,H:4:aux_o_0_0("A","a") is true
 1 Literal C:0/0@0,H:5:aux_o_0_0("C","a") is true
 1 Literal C:0/0@0,H:6:aux_o_0_0("D","a") is true
 1 Literal C:0/0@0,H:47:int4(0) is true
 1 Literal C:1/!0@0,H:1:aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") is false
 1 Literal C:0/0@0,H:44:aux_o_0_1("A","a") is true
 1 Literal C:0/0@0,H:2:aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") is true
 1 Literal C:1/!0@0,H:46:aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a") is false
 1 Literal C:0/0@0,H:45:aux_o_0_1("C","a") is true
 1 Partial assignment: {c("a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a"),int4(0)} (assigned: {c("a"),aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a"),aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a"),int4(0)})
Incrementally extracted partial assignment: {c("a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a"),int4(0)} (assigned: {c("a"),aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a"),aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a"),int4(0)})
Changed atoms: {c("a"),aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a"),aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a"),int4(0)}
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Model enumeration algorithm: (com)
 1 Committing model
 1 Model enumeration algorithm: (ext)
 1 Extract model model
 1 Projected to {c("a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a")}
 1 Model enumeration algorithm: (ret)
 1 Returning model
 1 RMG: Statistics:
Guesses: 0
Conflicts: 0
Models: 1
 1 gM RMG: got guess model {c("a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a")}
 1 gM RMG: PC: evaluation post check is started:
 1 gM RMG: PC: current model candidate is: {c("a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a")}
 1 gM gACS getAuxiliaryConstantSymbol for o ID(0x00000000,   0 atom ordinary_ground)
 1 gM gACS found ID(0x10800000,  39 term constant)
 1 gM gACS getAuxiliaryConstantSymbol for o ID(0x00000000,   1 atom ordinary_ground)
 1 gM gACS found ID(0x10800000,  55 term constant)
 1 gM stored oatom OrdinaryAtom(800000,'aux_o_0_1("D","a")',[ID(0x10800000,  55 term constant),ID(0x10000000,  61 term constant),ID(0x10000000,  41 term constant)]) which got ID(0x00800000,  48 atom ordinary_ground)
 1 gM RMG: PC: final ABox is
 1 gM RMG: final AB: aux_o_0_0("D","a")
 1 gM RMG: PC: going through facts of the current model candidate: 
 1 gM gACS getAuxiliaryConstantSymbol for e ID(0x00000000,   0 atom ordinary_ground)
 1 gM gACS created symbol 'aux_e_0_0'
 1 gM gACS PM::aP/0xe88180 adding predicate ID(0x10800000,  72 term constant), knownAddresses was 0
 1 gM gACS returning id ID(0x10800000,  72 term constant) for aux symbol aux_e_0_0
 1 gM RMG: PC: if aux_e_0_0 is present in the model then the corresponding external atom needs to be evaluated
 1 gM RMG: PC: current atoms is: c("a") with tuple c
 1 gM RMG: PC: current atoms is: aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a") with tuple aux_n_10000000_e
 1 gM RMG: PC: current atoms is: aux_o_0_0("A","a") with tuple aux_o_0_0
 1 gM RMG: PC: current atoms is: aux_o_0_0("C","a") with tuple aux_o_0_0
 1 gM RMG: PC: current atoms is: aux_o_0_0("D","a") with tuple aux_o_0_0
 1 gM RMG: PC: current atoms is: aux_o_0_1("A","a") with tuple aux_o_0_1
 1 gM RMG: PC: current atoms is: aux_o_0_1("C","a") with tuple aux_o_0_1
 1 gM EL: RMG: PC: postcheck is finished
 1 running debug checks
 1 =OnlineModelBuilder<...>::createIModelFromPredecessorOModels(1)
 1 gSI =getSuccessorIntersection(1,1)
 1 gSI one-dependency shortcut: simply finding corresponding model
 1 gSI no successors
 1 running debug checks
 1 got model#0:{c("a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a")}
 1 getTypeByAuxiliaryConstantSymbol for ID(0x10c00000,  49 term constant)
 1 found ID(0x10c00000,  49 term constant)
 1 getTypeByAuxiliaryConstantSymbol for ID(0x10800000,  39 term constant)
 1 found ID(0x10800000,  39 term constant)
 1 getTypeByAuxiliaryConstantSymbol for ID(0x10800000,  39 term constant)
 1 found ID(0x10800000,  39 term constant)
 1 getTypeByAuxiliaryConstantSymbol for ID(0x10800000,  39 term constant)
 1 found ID(0x10800000,  39 term constant)
 1 getTypeByAuxiliaryConstantSymbol for ID(0x10800000,  55 term constant)
 1 found ID(0x10800000,  55 term constant)
 1 getTypeByAuxiliaryConstantSymbol for ID(0x10800000,  55 term constant)
 1 found ID(0x10800000,  55 term constant)
 1 New global optimum: 
 1 printing for user id 0
 1 PM::uM(do)/0xe88180 = PredicateMask::updateMask (need to update) for predicates {39,48,49,55,69,72}
 1 PM::uM(do)/0xe88180 need to inspect 49 missing bits
 1 PM::uM(do)/0xe88180 relevant predicate constants are aux_o_0_0, aux_r_10000000_e, aux_n_10000000_e, aux_o_0_1, aux_o_6000000_0, aux_e_0_0, 
 1 PM::uM(do)/0xe88180 updateMask created new set of relevant ogatoms: {aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_0("A","a"),aux_o_0_0("C","a"),aux_o_0_0("D","a"),aux_o_0_1("A","a"),aux_o_0_1("C","a"),aux_o_6000000_0("simple.owl",cp,cn,rp,rn,"A","a"),aux_o_0_1("D","a")} and knownAddresses is 49
 1 printing for user id 2
 1 printing auxiliary 2 (reconstructed id ID(0x00800000,   2 atom ordinary_ground))
 1 printing for user id 4
 1 printing auxiliary 4 (reconstructed id ID(0x00800000,   4 atom ordinary_ground))
 1 printing for user id 5
 1 printing auxiliary 5 (reconstructed id ID(0x00800000,   5 atom ordinary_ground))
 1 printing for user id 6
 1 printing auxiliary 6 (reconstructed id ID(0x00800000,   6 atom ordinary_ground))
 1 printing for user id 44
 1 printing auxiliary 44 (reconstructed id ID(0x00800000,  44 atom ordinary_ground))
 1 printing for user id 45
 1 printing auxiliary 45 (reconstructed id ID(0x00800000,  45 atom ordinary_ground))
 1 requesting imodel
 1 =OnlineModelBuilder<...>::getNextIModel(1)
 1 uprops: (no ModelGeneratorFactory)
 1 mbprops: currentmg =      null, needInput = 1, orefcount = 0, imodel =  0xec2c10, currentisuccessor = unset
 1 =OnlineModelBuilder<...>::ensureModelIncrement(1,0)
 1 ucursor = 0 with mbprops = {currentmg =  0xeaf510, needInput = 0, orefcount = 1, imodel =  0xeaefe0, currentisuccessor = 0xebd500 -> 0xeaefe0}
 1 =OnlineModelBuilder<...>::getNextOModel(0):
 1 uprops = outer Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
inner Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
gidb={
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) :- c(X).
}
idb={
:- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X).
}
xidb={
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X), c(X).
}

 1 mbprops = currentmg =  0xeaf510, needInput = 0, orefcount = 1, imodel =  0xeaefe0, currentisuccessor = 0xebd500 -> 0xeaefe0
 1 =OnlineModelBuilder<...>::advanceOModelForIModel(0)
 1 imodel has properties dummy interpretation=null
 1 =createNextModel(0)
 1 RMG: asking for next model
 1 ClaspSolver::getNextModel
 1 Model enumeration algorithm: (cos)
 1 Committing symmetric model
 1 No more symmetric models, going to update
 1 Model enumeration algorithm: (upd)
 1 Updating enumerator
 1 Model enumeration algorithm: (sol)
 1 Solve for next model
 1 Model enumeration algorithm: (ret)
 1 Returning empty model
 1 RMG: Statistics:
Guesses: 0
Conflicts: 0
Models: 1
 1 RMG: unsatisfiable -> returning no model
 1 Final Statistics:
Guesses: 0
Conflicts: 0
Models: 1
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:1/!0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:1/!0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 =OnlineModelBuilder<...>::getNextIModel(0)
 1 uprops: outer Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
inner Eatoms={
&cDL["simple.owl",cp,cn,rp,rn,"A"](X)
}
gidb={
aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) v aux_n_10000000_e("simple.owl",cp,cn,rp,rn,"A",X) :- c(X).
}
idb={
:- &cDL["simple.owl",cp,cn,rp,rn,"A"](X), c(X).
}
xidb={
:- aux_r_10000000_e("simple.owl",cp,cn,rp,rn,"A",X), c(X).
}

 1 mbprops: currentmg =      null, needInput = 0, orefcount = 0, imodel =  0xeaefe0, currentisuccessor = unset
 1 unit needs no input
 1 usage count of model builder before reset is 1
 1 ~EvalUnitModels()@0xeb8150
 1 ~EvalUnitModels()@0xeb8160
 1 ~EvalUnitModels()@0xeb8170
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 Destructing component graph 0xea5230
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 85 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 1 (it should be 1)
 1 unloading plugins
 1 about to unload loaded plugin 'hexagentplugin'
 1 about to unload loaded plugin 'dlvhex-dlliteplugin'
 1 unloading plugin 'dlvhex-functionplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-existsplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-weakconstraintplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-higherorderplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-strongnegationplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-aggregateplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-queryplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-manualevalheuristicsplugin[internal]' not necessary (NULL handle)
 1 done unloading
