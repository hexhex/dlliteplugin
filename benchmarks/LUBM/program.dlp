% By default, a research assistant is a student.

resas(X) :- DL[;ResearchAssistant](X).
student(X) :- resas(X), not neg_student(X).

% Single out the non-students under default assumption.

neg_student(X) :- DL[Student+=student; -Student](X), resas(X).

% Assign every research assistant to a postdoc, who is supposed to help the former in case research problems emerge
% Collect the assignments into "helps" p% Assign every research assistant to a postdoc, who is supposed to help the former in case % research problems emerge
% Collect the assignments into "helps" predicate where the first parameter is a postdoc and the second is a research assistant 

helps(Z1,Z2):- DL[;PostDoc](Z2), resas(Z1), not omit(Z1,Z2).

% Omit helps(a,b) if b is a postdoc (postdoc is capable of solving all problems himself and even helping other students)
% Note that it might happen that some postdoc is placed instead of b (since research assistants might be visiting postdocs even tho% ugh by default they are students) 
 
omitZ1(Z1) :- DL[;PostDoc](Z1).
omitZ2(Z2) :- DL[;PostDoc](Z2).
omit(Z1,Z2) :- omitZ1(Z1), omitZ2(Z2).
