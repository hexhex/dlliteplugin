Logger warning: deactivated ERROR level
 1 now checking plugin ABI version for ../../src/libdlvhexplugin-dllite
 1 now calling plugin import function for ../../src/libdlvhexplugin-dllite
 1 plugin import function returned 0x7fa20e64c600
 1 now checking plugin ABI version for /usr/local/lib/dlvhex/plugins/libdlvhexplugin-hexagentplugin
 1 now calling plugin import function for /usr/local/lib/dlvhex/plugins/libdlvhexplugin-hexagentplugin
 1 plugin import function returned 0x7fa20dd30860
 1 selectLoadedPlugins: already loaded: {dlvhex-aggregateplugin[internal],dlvhex-existsplugin[internal],dlvhex-functionplugin[internal],dlvhex-higherorderplugin[internal],dlvhex-manualevalheuristicsplugin[internal],dlvhex-pythonplugin[internal],dlvhex-queryplugin[internal],dlvhex-strongnegationplugin[internal],dlvhex-weakconstraintplugin[internal]}
 1 processing options for plugin dlvhex-manualevalheuristicsplugin[internal]
 1 currently have <>
 1 processing options for plugin dlvhex-queryplugin[internal]
 1 currently have <>
 1 processing options for plugin dlvhex-aggregateplugin[internal]
 1 currently have <>
 1 processing options for plugin dlvhex-strongnegationplugin[internal]
 1 currently have <>
 1 processing options for plugin dlvhex-higherorderplugin[internal]
 1 currently have <>
 1 processing options for plugin dlvhex-weakconstraintplugin[internal]
 1 currently have <>
 1 processing options for plugin dlvhex-existsplugin[internal]
 1 currently have <>
 1 processing options for plugin dlvhex-functionplugin[internal]
 1 currently have <>
 1 processing options for plugin dlvhex-pythonplugin[internal]
 1 currently have <>
 1 processing options for plugin dlvhex-dlliteplugin
 1 currently have <>
 1 processing options for plugin hexagentplugin
 1 currently have <>
 1 adding plugin atoms from plugin dlvhex-manualevalheuristicsplugin[internal]
 1 adding plugin atoms from plugin dlvhex-queryplugin[internal]
 1 adding plugin atoms from plugin dlvhex-aggregateplugin[internal]
 1 Adding aggregate external atoms with an input arity of up to 0
 1   got plugin atom max0
 1   got plugin atom min0
 1   got plugin atom sum0
 1   got plugin atom times0
 1   got plugin atom avg0
 1   got plugin atom count0
 1 adding plugin atoms from plugin dlvhex-strongnegationplugin[internal]
 1 adding plugin atoms from plugin dlvhex-higherorderplugin[internal]
 1 adding plugin atoms from plugin dlvhex-weakconstraintplugin[internal]
 1 adding plugin atoms from plugin dlvhex-existsplugin[internal]
 1 Adding exists atom with an input arity of up to 1
 1   got plugin atom exists0
 1   got plugin atom exists1
 1 adding plugin atoms from plugin dlvhex-functionplugin[internal]
 1 Adding functional atom with an input arity of up to 1
 1   got plugin atom functionCompose
 1   got plugin atom functionDecompose0
 1   got plugin atom functionDecompose1
 1   got plugin atom isFunctionTerm
 1   got plugin atom getArity
 1   got plugin atom functionDecompose
 1 adding plugin atoms from plugin dlvhex-pythonplugin[internal]
 1 Initialize Python plugin
 1 Python plugin initialization done
 1 adding plugin atoms from plugin dlvhex-dlliteplugin
 1 Constructor of cDL plugin is started
 1 Constructor of rDL plugin is started
 1 Constructor of consDL plugin is started
 1 Constructor of inconsDL plugin is started
 1   got plugin atom cDL
 1   got plugin atom rDL
 1   got plugin atom consDL
 1   got plugin atom inconsDL
 1 adding plugin atoms from plugin hexagentplugin
 1   got plugin atom distance
 1   got plugin atom on_top_of
 1   got plugin atom on_top_all
 1   got plugin atom on_top_mass
 1   got plugin atom next
 1   got plugin atom shootable
 1   got plugin atom firstabove
 1   got plugin atom firstbelow
 1   got plugin atom canpush
 1   got plugin atom clearsky
 1   got plugin atom stability
 1   got plugin atom bestwhite
 1 Before starting repair model generator
 1 debugFilePrefix='dbg_t'
 1 ManualEvalHeuristicsPlugin::createParserModules()
 1 QueryPlugin::createParserModules()
 1 StrongNegationPlugin::createParserModules()
 1 HigherOrderPlugin::createParserModules()
 1 ExistsPlugin::createParserModules()
 1 DLLitePlugin::createParserModules(ProgramCtx& ctx)
 1 stored term Term(sub) which got ID(0x10000000,  30 term constant)
 1 stored term Term(op) which got ID(0x10000000,  31 term constant)
 1 stored term Term(conf) which got ID(0x10000000,  32 term constant)
 1 stored term Term(funct) which got ID(0x10000000,  33 term constant)
 1 stored term Term(inv) which got ID(0x10000000,  34 term constant)
 1 stored term Term(confref) which got ID(0x10000000,  35 term constant)
 1 stored term Term(X) which got ID(0x12000000,  36 term variable)
 1 stored term Term(Y) which got ID(0x12000000,  37 term variable)
 1 stored term Term(Z) which got ID(0x12000000,  38 term variable)
 1 gACS getAuxiliaryConstantSymbol for o ID(0x00000000,   0 atom ordinary_ground)
 1 gACS created symbol 'aux_o_0_0'
 1 gACS PM::aP/0xd08820 adding predicate ID(0x10800000,  39 term constant), knownAddresses was 0
 1 gACS returning id ID(0x10800000,  39 term constant) for aux symbol aux_o_0_0
 1  reset edb 
 1 starting to parse
 1 checking groundness of tuple <ID(0x10000000,  40 term constant),ID(0x12000000,  36 term variable)>
 1 stored oatom OrdinaryAtom(1000000,'d(X)',[ID(0x10000000,  40 term constant),ID(0x12000000,  36 term variable)]) which got ID(0x01000000,   0 atom ordinary_nonground)
 1 stored atom OrdinaryAtom(1000000,'d(X)',[ID(0x10000000,  40 term constant),ID(0x12000000,  36 term variable)]) which got id ID(0x01000000,   0 atom ordinary_nonground)
 1 storing external atom ExternalAtom(&ID(0x10000000,  14 term constant)[[ID(0x10000000,  41 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant)]]([ID(0x12000000,  36 term variable)]) pluginAtom=null auxInputPredicate=ID_FAIL
 1 external atom ExternalAtom(&ID(0x10000000,  14 term constant)[[ID(0x10000000,  41 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant)]]([ID(0x12000000,  36 term variable)]) pluginAtom=null auxInputPredicate=ID_FAIL got id ID(0x06000000,   0 atom external)
 1 added rule with id ID(0x30080000,   0 rule regular) to idb
 1 parsing returned with success=1
 1 aEAwPA = associateExtAtomsWithPluginAtoms
 1 aEAwPA = associateExtAtomsWithPluginAtoms
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src '&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)'
 1 rFS  safevars ''
 1 rFS checking literal &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)
 1 rFS  -> checking input safety
 1 rFS  -> inputs safe, adding outputs as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt '&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)'
 1 rFS  -> newsafevars 'X'
 1 LiberalSafetyChecker::createDependencyGraph
 1 Computing strongly connected components in attribute dependency graph
 1 0 attributes depend cyclically on external attributes
 1 Attribute d#1 is externally acyclic
 1 Attribute d#1 is domain-expansion safe
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#o1 is externally acyclic
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#o1 is domain-expansion safe
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i1 is externally acyclic
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i1 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#o1
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i2 is externally acyclic
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i2 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#o1
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i3 is externally acyclic
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i3 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#o1
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i4 is externally acyclic
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i4 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#o1
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i5 is externally acyclic
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i5 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#o1
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i6 is externally acyclic
 1 Attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#i6 is domain-expansion safe
 1 Fulfilled precondition of attribute r0:&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"]#o1
 1 Exploiting ID(0x26000000,   0 literal external)
 1 Variable r0/X is bounded
 1 Fulfilled precondition of attribute d#1
 1 Constructing optimized rule
 1 Checking safety of optimized rule
 1 rFS =reorderForSafety
 1 rFS safety reordering loop:
 1 rFS  src '&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)'
 1 rFS  safevars ''
 1 rFS checking literal &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)
 1 rFS  -> checking input safety
 1 rFS  -> inputs safe, adding outputs as safe
 1 rFS  -> transferring
 1 rFS transferSafeLiteralsAndNewlySafeVariables returning with reordered=0 and nottransferred=0
 1 rFS  -> src ''
 1 rFS  -> tgt '&cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)'
 1 rFS  -> newsafevars 'X'
 1 Checking variables of optimized rule
 1 Optimized rule is safe
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 88 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 0 (it should be 1)
 1 Domain Expansion Safety: 1 (8 out of 8 attributes are safe)
 1 =createNodesAndIntraRuleDependencies
 1 cNaIRDfR/0 ENTRY
 1 cNaIRDfR/0 =createNodesAndIntraRuleDependenciesForRule for rule ID(0x30080000,   0 rule regular) d(X) :- &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X).
 1 cNaIRDfR/0 creating node for ID ID(0x30080000,   0 rule regular)
 1 cNaIRDfR/0 adding head item ID(0x01000000,   0 atom ordinary_nonground)
 1 cNaIRDfR/0 adding body literal ID(0x26000000,   0 literal external)
 1 cNaIRDfR/0 adding external atom &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)  (aux=ID_FAIL) with id ID(0x06000000,   0 atom external)
 1 cNaIRDfR/0 creating node for ID ID(0x06000000,   0 atom external)
 1 cNaIRDfR/0 cARiR =createAuxiliaryRuleIfRequired for body [ID(0x26000000,   0 literal external)] = &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)
 1 cNaIRDfR/0 storing dependency: ID(0x30080000,   0 rule regular) -> ID(0x06000000,   0 atom external) with monotonic=1, naf=0
 1 cNaIRDfR/0 EXIT
 1 =createExternalPredicateInputDependencies
 1 itext0 =ID(0x06000000,   0 atom external)
 1 itext0 checking external atom &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)  (aux=ID_FAIL)
 1 itext0 at1 = checking predicate input ID(0x10000000,  42 term constant) at position 1
 1 itext0 at1 PM::aP/0xde1590 adding predicate ID(0x10000000,  42 term constant), knownAddresses was 0
 1 itext0 at1 cEPIDfI =createExternalPredicateInputDependenciesForInput (finding all rules with heads that use predicate ID(0x10000000,  42 term constant))
 1 itext0 at2 = checking predicate input ID(0x10000000,  43 term constant) at position 2
 1 itext0 at2 PM::aP/0xde1590 adding predicate ID(0x10000000,  43 term constant), knownAddresses was 0
 1 itext0 at2 cEPIDfI =createExternalPredicateInputDependenciesForInput (finding all rules with heads that use predicate ID(0x10000000,  43 term constant))
 1 itext0 at3 = checking predicate input ID(0x10000000,  44 term constant) at position 3
 1 itext0 at3 PM::aP/0xde1590 adding predicate ID(0x10000000,  44 term constant), knownAddresses was 0
 1 itext0 at3 cEPIDfI =createExternalPredicateInputDependenciesForInput (finding all rules with heads that use predicate ID(0x10000000,  44 term constant))
 1 itext0 at4 = checking predicate input ID(0x10000000,  45 term constant) at position 4
 1 itext0 at4 PM::aP/0xde1590 adding predicate ID(0x10000000,  45 term constant), knownAddresses was 0
 1 itext0 at4 cEPIDfI =createExternalPredicateInputDependenciesForInput (finding all rules with heads that use predicate ID(0x10000000,  45 term constant))
 1 =createHeadHeadUnifyingDependencies
 1 it1:ID(0x01000000,   0 atom ordinary_nonground) = OrdinaryAtom(1000000,'d(X)',[ID(0x10000000,  40 term constant),ID(0x12000000,  36 term variable)])
 1 it1:ID(0x01000000,   0 atom ordinary_nonground) adding unifying head-head dependency for OrdinaryAtom(1000000,'d(X)',[ID(0x10000000,  40 term constant),ID(0x12000000,  36 term variable)]) in head of disjunctive rules [] and in head of nondisjunctive rules [0]
 1 =createHeadBodyUnifyingDependencies
 1 ith:ID(0x01000000,   0 atom ordinary_nonground) = OrdinaryAtom(1000000,'d(X)',[ID(0x10000000,  40 term constant),ID(0x12000000,  36 term variable)])
 1 Building component graph
 1 created component node 0xde4920 for scc 0 with depgraph nodes <1>
 1 checking whether eatom ID(0x06000000,   0 atom external) is monotonic
 1   eatom ID(0x06000000,   0 atom external) is monotonic
 1 cNNEiC checking predecessor edges of node 1
 1 calculateFixedDomain
 1 calculateStratificationInfo
 1 -> outerEatoms <ID(0x06000000,   0 atom external)>
 1 -> innerRules <>
 1 -> innerConstraints <>
 1 -> innerEatoms <>
 1 -> disjunctiveHeads=0 negativeDependencyBetweenRules=0 innerEatomsNonmonotonic=0 outerEatomsNonmonotonic=0 componentIsMonotonic=1
 1 created component node 0xde4aa0 for scc 1 with depgraph nodes <0>
 1 cNNEiC checking predecessor edges of node 0
 1 calculateFixedDomain
 1 checking fixed domain of variable X
 1 calculateStratificationInfo
 1 Literal ID(0x26000000,   0 literal external) in rule ID(0x30080000,   0 rule regular) is stratified
 1 -> outerEatoms <>
 1 -> innerRules <ID(0x30080000,   0 rule regular)>
 1 -> innerConstraints <>
 1 -> innerEatoms <>
 1 -> disjunctiveHeads=0 negativeDependencyBetweenRules=0 innerEatomsNonmonotonic=0 outerEatomsNonmonotonic=0 componentIsMonotonic=1
 1 found dependency from SCC 1 to SCC 0
 1 Building component graph
 1 invoking build() on eval heuristic
 1 = EvalGraphBuilder::createEvalUnit(<0xde4ea0,0xde5020>,<>)
 1  compo &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)
 1  compr d(X) :- &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X).
 1 cC = collapseComponents(<0xde4ea0,0xde5020>,<>)
 1 cC created component node 0xde5930 for collapsed component
 1 cC cCCI = computeCollapsedComponentInfos(<0xde4ea0,0xde5020>,<>,.,.,.)
 1 cC cCCI original 0xde4ea0: (outgoing)
 1 cC cCCI original 0xde5020: (outgoing)
 1 cC cCCI    internal dependency (to 0xde4ea0)
 1 cC cCCI original 0xde4ea0: (incoming)
 1 cC cCCI original 0xde5020: (incoming)
 1 cC cCCI calculateStratificationInfo
 1 cC cCCI Literal ID(0x26000000,   0 literal external) in rule ID(0x30080000,   0 rule regular) is stratified
 1 created unit 0 for new comp 0xde5930
 1 configuring plain model generator factory for eval unit 0
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 95 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 6 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 94 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 5 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 94 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 5 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 93 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 4 (it should be 1)
 1 rewriting rule d(X) :- &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X). from Rule([ID(0x01000000,   0 atom ordinary_nonground)] <- [ID(0x26000000,   0 literal external)]) with id ID(0x30080000,   0 rule regular) to auxiliary predicates
 1 rewriting external atom &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)  (aux=ID_FAIL) literal with id ID(0x26000000,   0 literal external)
 1 gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 gACS created symbol 'aux_r_10000000_e'
 1 gACS PM::aP/0xd08820 adding predicate ID(0x10c00000,  47 term constant), knownAddresses was 0
 1 gACS returning id ID(0x10c00000,  47 term constant) for aux symbol aux_r_10000000_e
 1 stored oatom OrdinaryAtom(1c00000,'aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D",X)',[ID(0x10c00000,  47 term constant),ID(0x10000000,  41 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x12000000,  36 term variable)]) which got ID(0x01c00000,   1 atom ordinary_nonground)
 1 adding replacement atom ID(0x01c00000,   1 atom ordinary_nonground) as literal
 1 rewritten rule d(X) :- aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D",X). from Rule([ID(0x01000000,   0 atom ordinary_nonground)] <- [ID(0x21c00000,   1 literal ordinary_nonground)]) got id ID(0x30880000,   1 rule regular)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 92 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 3 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 91 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 2 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 95 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 6 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 94 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 5 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 94 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 5 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 93 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 4 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 92 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 3 (it should be 1)
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 91 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 2 (it should be 1)
 1 GenuinePlainModelGeneratorFactory got idb d(X) :- &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X).
 1 GenuinePlainModelGeneratorFactory got xidb d(X) :- aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D",X).
 1 Destructing component graph 0xde4e50
 1 created virtual final unit ufinal = 1
 1 adding dependency from ufinal to unit 0 join order 0
 1 setting up program ctx for plugin dlvhex-manualevalheuristicsplugin[internal]
 1 setting up program ctx for plugin dlvhex-queryplugin[internal]
 1 setting up program ctx for plugin dlvhex-aggregateplugin[internal]
 1 setting up program ctx for plugin dlvhex-strongnegationplugin[internal]
 1 setting up program ctx for plugin dlvhex-higherorderplugin[internal]
 1 setting up program ctx for plugin dlvhex-weakconstraintplugin[internal]
 1 setting up program ctx for plugin dlvhex-existsplugin[internal]
 1 setting up program ctx for plugin dlvhex-functionplugin[internal]
 1 setting up program ctx for plugin dlvhex-pythonplugin[internal]
 1 setting up program ctx for plugin dlvhex-dlliteplugin
 1 DLLitePlugin::setupProgramCtx(ProgramCtx& ctx)
 1 Registry was already previously set
 1 IDs have already been prepared
 1 Constructing classification program
 1 stored term Term(X2) which got ID(0x12000000,  48 term variable)
 1 stored term Term(Y2) which got ID(0x12000000,  49 term variable)
 1 stored term Term(Y1) which got ID(0x12000000,  50 term variable)
 1 stored oatom OrdinaryAtom(1000000,'sub(X,Y)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) which got ID(0x01000000,   2 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'sub(X,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  38 term variable)]) which got ID(0x01000000,   3 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'sub(Y,Z)',[ID(0x10000000,  30 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  38 term variable)]) which got ID(0x01000000,   4 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(X,X2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  48 term variable)]) which got ID(0x01000000,   5 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(Y,Y2)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  49 term variable)]) which got ID(0x01000000,   6 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'sub(Y2,X2)',[ID(0x10000000,  30 term constant),ID(0x12000000,  49 term variable),ID(0x12000000,  48 term variable)]) which got ID(0x01000000,   7 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'sub(Y2,Y1)',[ID(0x10000000,  30 term constant),ID(0x12000000,  49 term variable),ID(0x12000000,  50 term variable)]) which got ID(0x01000000,   8 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'conf(X,Y)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) which got ID(0x01000000,   9 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'conf(X,Y1)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]) which got ID(0x01000000,  10 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'conf(X,Y2)',[ID(0x10000000,  32 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  49 term variable)]) which got ID(0x01000000,  11 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(X,Y)',[ID(0x10000000,  31 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) which got ID(0x01000000,  12 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(Y,X)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) which got ID(0x01000000,  13 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'inv(X,Y)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  37 term variable)]) which got ID(0x01000000,  14 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'inv(X,Y1)',[ID(0x10000000,  34 term constant),ID(0x12000000,  36 term variable),ID(0x12000000,  50 term variable)]) which got ID(0x01000000,  15 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'inv(Y,X)',[ID(0x10000000,  34 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  36 term variable)]) which got ID(0x01000000,  16 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'confref(X)',[ID(0x10000000,  35 term constant),ID(0x12000000,  36 term variable)]) which got ID(0x01000000,  17 atom ordinary_nonground)
 1 stored oatom OrdinaryAtom(1000000,'op(Y,Y1)',[ID(0x10000000,  31 term constant),ID(0x12000000,  37 term variable),ID(0x12000000,  50 term variable)]) which got ID(0x01000000,  18 atom ordinary_nonground)
 1 Constructed classification program
 1 CLP: sub(X,Z) :- sub(X,Y), sub(Y,Z).

 1 CLP: sub(Y2,X2) :- op(X,X2), op(Y,Y2), sub(X,Y).

 1 CLP: conf(X,Y1) :- sub(X,Y), op(Y,Y1).

 1 CLP: conf(X,Y2) :- conf(X,Y1), sub(Y2,Y1).

 1 CLP: confref(X) :- conf(X,Y), inv(X,Y).

 1 CLP: op(Y,X) :- op(X,Y).

 1 CLP: inv(Y,X) :- inv(X,Y).

 1 setting up program ctx for plugin hexagentplugin
 1 EvalUnitModels()@0x7fff864ebcc0
 1 EvalUnitModels()@0x7fff864ebc60
 1 EvalUnitModels(const EvalUnitModels&)@0xde6c70 from 0x7fff864ebc60
 1 EvalUnitModels(const EvalUnitModels&)@0xde6c80 from 0x7fff864ebc60
 1 EvalUnitModels(const EvalUnitModels&)@0xde6c90 from 0x7fff864ebc60
 1 ~EvalUnitModels()@0x7fff864ebc60
 1 ~EvalUnitModels()@0x7fff864ebcc0
 1 initializing mbp for unit 0
 1 initializing mbp for unit 1
 1 requesting imodel
 1 =OnlineModelBuilder<...>::getNextIModel(1)
 1 uprops: (no ModelGeneratorFactory)
 1 mbprops: currentmg =      null, needInput = 1, orefcount = 0, imodel =     unset, currentisuccessor = unset
 1 =OnlineModelBuilder<...>::getNextOModel(0):
 1 uprops = &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)d(X) :- aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D",X).
 1 mbprops = currentmg =      null, needInput = 0, orefcount = 0, imodel =     unset, currentisuccessor = unset
 1 =OnlineModelBuilder<...>::getNextIModel(0)
 1 uprops: &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)d(X) :- aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D",X).
 1 mbprops: currentmg =      null, needInput = 0, orefcount = 0, imodel =     unset, currentisuccessor = unset
 1 unit needs no input
 1 running debug checks
 1 =OnlineModelBuilder<...>::advanceOModelForIModel(0)
 1 imodel has properties dummy interpretation=null
 1 =createNextModel(0)
 1 = evaluateExternalAtom for &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)  (aux=ID_FAIL) with input interpretation {}
 1 EA::uM/0xde19b0 ENTRY
 1 EA::uM/0xde19b0 EXIT
 1 gACS getAuxiliaryConstantSymbol for r ID(0x10000000,  14 term constant)
 1 gACS found ID(0x10c00000,  47 term constant)
 1 Retrieve with learning, pointer to nogood container: not available
 1 CDLAtom::retrieve
 1 useABox = 1
 1 prepareOntology
 1 Loading ontologytest1.owl
FaCT++.Kernel: Reasoner for the SROIQ(D) Description Logic, 64-bit
Copyright (C) Dmitry Tsarkov, 2002-2013. Version 1.6.2 (19 February 2013)
 1 Assigning ontology name
 1 Reading file test1.owl
 1 Extracting ontology namespace
 1 Namespace is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52 (path: /home/redl/dlvhex/dlliteplugin/examples/annotated/test1.owl, version: )
 1 Submitting ontology with Abox to reasoning kernel
 1 Consistency of KB: 1
 1 Analyzing ontology (Tbox and Abox)
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52 / rdf:type / owl:Ontology
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#B / rdf:type / owl:Class
 1 stored term Term("B") which got ID(0x10000000,  51 term constant)
 1 Found concept: "B"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#C / rdf:type / owl:Class
 1 stored term Term("C") which got ID(0x10000000,  52 term constant)
 1 Found concept: "C"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#D / rdf:type / owl:Class
 1 Found concept: "D"
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#c / rdf:type / owl:NamedIndividual
 1 stored term Term("c") which got ID(0x10000000,  53 term constant)
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#c / rdf:type / http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#D
 1 NS: Subject is: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#c
 1 NS: After storage: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#c
 1 stored oatom OrdinaryAtom(a00000,'aux_o_0_0("D","c")',[ID(0x10800000,  39 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  53 term constant)]) which got ID(0x00a00000,   0 atom ordinary_ground)
 1 NS: Found individual: "c"
 1 NS: Found concept assertion: D("c")
 1 Concept assertions: {aux_o_0_0("D","c")}
 1 Expand Abox is started with useAbox = 1
 1 prepareOntology
 1 Accessing cached ontology test1.owl
 1 Expanding Abox
 1 Looking up query concept
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52 / rdf:type / owl:Ontology
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#B / rdf:type / owl:Class
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#C / rdf:type / owl:Class
 1 Current triple: http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#D / rdf:type / owl:Class
 1 Preparing Actor_collector for http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#D
 1 Instantiating Actor_collector
 1 Sending concept query
 1 Actor collector called with http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#D
 1 Actor collector called with http://www.semanticweb.org/dasha/ontologies/2014/9/untitled-ontology-52#c
 1 Adding element to tuple (ID=ID(0x10000000,  53 term constant))
 1 Actor collector called with BOTTOM
 1 Query answering complete, recovering Abox
 1 prepareOntology
 1 Accessing cached ontology test1.owl
 1 vEAAT = verifyEAtomAnswerTuple for &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)  (aux=ID_FAIL) and tuple <"c">
 1 integrating eatom tuple <ID(0x10c00000,  47 term constant),ID(0x10000000,  41 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  53 term constant)>
 1 stored oatom OrdinaryAtom(c00000,'aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c")',[ID(0x10c00000,  47 term constant),ID(0x10000000,  41 term constant),ID(0x10000000,  42 term constant),ID(0x10000000,  43 term constant),ID(0x10000000,  44 term constant),ID(0x10000000,  45 term constant),ID(0x10000000,  46 term constant),ID(0x10000000,  53 term constant)]) which got ID(0x00c00000,   1 atom ordinary_ground)
 1 got replacement ID ID(0x00c00000,   1 atom ordinary_ground)
 1 output interpretation is now {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c")}
 1 Instantiating genuine grounder with gringo
 1 Creating new term with name 'int0'
 1 stored term Term(int0) which got ID(0x10000000,  54 term constant)
 1 Creating new term with name 'anonymous1'
 1 stored term Term(anonymous1) which got ID(0x10000000,  55 term constant)
 1 Sending the following input to Gringo: {{aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c").
d(X) :- aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D",X).
int0(0..0).}}
 1 Got atom aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c") with Gringo-ID 2 and dlvhex-ID ID(0x00c00000,   1 atom ordinary_ground)
 1 parsing gringo ground atom 'd("c")'
 1 Term tuple: d
 1 got token 'd'
 1 Term tuple: "c"
 1 got token '"c"'
 1 Got atom d("c") with Gringo-ID 3 and dlvhex-ID ID(0x00000000,   2 atom ordinary_ground)
 1 parsing gringo ground atom 'int0(0)'
 1 Term tuple: int0
 1 got token 'int0'
 1 Term tuple: 0
 1 got token '0'
 1 Got atom int0(0) with Gringo-ID 4 and dlvhex-ID ID(0x00000000,   3 atom ordinary_ground)
 1 Transforming 3 rules to DLVHEX
 1 Setting fact 1 (Gringo: 2)
 1 Setting fact 2 (Gringo: 3)
 1 Setting fact 3 (Gringo: 4)
 1 Got the following ground program from Gringo: {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c").d("c").int0(0).

}
 1 Instantiating genuine solver with clasp (min-check: 1)
 1 Contructing atom dependency graph for 0 rules
 1 Computing strongly connected components
 1 Partitioning program
 1 Computing head-cycles of components
 1 Computing e-cycles of components
 1 Program:
EDB: {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c"),d("c"),int0(0)}
IDB:

has SCC-decomposition: 
 1 Configure clasp in ASP mode
 1 Interpreting clasp command-line
 1 Found configuration: --configuration=frumpy
 1 Configuring options
 1 Parsing command-line
 1 Assigning specified values
 1 Assigning defaults
 1 Applying options
 1 Finished option parsing
 1 Sending EDB to clasp: {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c"),d("c"),int0(0)}
 1 Sending IDB to clasp
 1 SAT instance has 1 variables
 1 Instance is not inconsistent
 1 Setting all 1 variables to frozen
 1 Prepare model enumerator
 1 Finalizing initialization
 1 Problem has 1 variables
 1 Symbol table of optimized program:
 1 H:1 (aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c")) <--> C:0/0
 1 H:2 (d("c")) <--> C:0/0
 1 H:3 (int0(0)) <--> C:0/0
 1 hexToClasp.size()=4, symTab.size()=3
 1 Prepare solver object
 1 Adding post propagator
 1 Initializing assignment extraction
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Adding watch for literal C:0/0 and its negation
 1 Extracting full interpretation from clasp
 1 Extracting clasp interpretation
 1 Literal C:0/0@0,H:1:aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c") is true
 1 Literal C:0/0@0,H:2:d("c") is true
 1 Literal C:0/0@0,H:3:int0(0) is true
 1 ClaspSolver::getNextModel
 1 Model enumeration algorithm: (ini)
 1 Starting new search
 1 Adding step literal to assumptions
 1 Starting enumerator with 1 assumptions (including step literal)
 1 ExternalPropagator::propagateFixpoint
 1 Will not propagate to HEX
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Nothing more to propagate
 1 ExternalPropagator::propagateFixpoint
 1 Will not propagate to HEX
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Nothing more to propagate
 1 Model enumeration algorithm: (sat)
 1 Instance is satisfiable wrt. assumptions
 1 Model enumeration algorithm: (sol)
 1 Solve for next model
 1 ExternalPropagator::propagateFixpoint
 1 Will not propagate to HEX
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Nothing more to propagate
 1 ExternalPropagator::isModel
 1 Must propagate to HEX
 1 ExternalPropagator: Calling HEX-Propagator
 1 Extracting clasp interpretation
 1 Literal C:0/0@0,H:1:aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c") is true
 1 Literal C:0/0@0,H:2:d("c") is true
 1 Literal C:0/0@0,H:3:int0(0) is true
 1 Partial assignment: {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c"),d("c"),int0(0)} (assigned: {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c"),d("c"),int0(0)})
Incrementally extracted partial assignment: {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c"),d("c"),int0(0)} (assigned: {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c"),d("c"),int0(0)})
Changed atoms: {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c"),d("c"),int0(0)}
 1 ExternalPropagator: Adding new clauses to clasp (0 were prepared)
 1 Model enumeration algorithm: (com)
 1 Committing model
 1 Model enumeration algorithm: (ext)
 1 Extract model model
 1 Projected to {aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c"),d("c")}
 1 Model enumeration algorithm: (ret)
 1 Returning model
 1 Statistics:
Guesses: 0
Conflicts: 0
Models: 1
 1 running debug checks
 1 =OnlineModelBuilder<...>::createIModelFromPredecessorOModels(1)
 1 gSI =getSuccessorIntersection(1,1)
 1 gSI one-dependency shortcut: simply finding corresponding model
 1 gSI no successors
 1 running debug checks
 1 got model#0:{aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c"),d("c")}
 1 getTypeByAuxiliaryConstantSymbol for ID(0x10c00000,  47 term constant)
 1 found ID(0x10c00000,  47 term constant)
 1 New global optimum: 
 1 printing for user id 1
 1 PM::uM(do)/0xd08820 = PredicateMask::updateMask (need to update) for predicates {39,47}
 1 PM::uM(do)/0xd08820 need to inspect 4 missing bits
 1 PM::uM(do)/0xd08820 relevant predicate constants are aux_o_0_0, aux_r_10000000_e, 
 1 PM::uM(do)/0xd08820 updateMask created new set of relevant ogatoms: {aux_o_0_0("D","c"),aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D","c")} and knownAddresses is 4
 1 printing auxiliary 1 (reconstructed id ID(0x00800000,   1 atom ordinary_ground))
 1 printing for user id 2
 1 requesting imodel
 1 =OnlineModelBuilder<...>::getNextIModel(1)
 1 uprops: (no ModelGeneratorFactory)
 1 mbprops: currentmg =      null, needInput = 1, orefcount = 0, imodel =  0xe2adb0, currentisuccessor = unset
 1 =OnlineModelBuilder<...>::ensureModelIncrement(1,0)
 1 ucursor = 0 with mbprops = {currentmg =  0xdef480, needInput = 0, orefcount = 1, imodel =  0xdf0090, currentisuccessor = 0xe2ab90 -> 0xdf0090}
 1 =OnlineModelBuilder<...>::getNextOModel(0):
 1 uprops = &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)d(X) :- aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D",X).
 1 mbprops = currentmg =  0xdef480, needInput = 0, orefcount = 1, imodel =  0xdf0090, currentisuccessor = 0xe2ab90 -> 0xdf0090
 1 =OnlineModelBuilder<...>::advanceOModelForIModel(0)
 1 imodel has properties dummy interpretation=null
 1 =createNextModel(0)
 1 ClaspSolver::getNextModel
 1 Model enumeration algorithm: (cos)
 1 Committing symmetric model
 1 No more symmetric models, going to update
 1 Model enumeration algorithm: (upd)
 1 Updating enumerator
 1 Model enumeration algorithm: (sol)
 1 Solve for next model
 1 Model enumeration algorithm: (ret)
 1 Returning empty model
 1 Statistics:
Guesses: 0
Conflicts: 0
Models: 1
 1 Final Statistics:
Guesses: 0
Conflicts: 0
Models: 1
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 Removing watch for literal C:0/0 and its negation
 1 =OnlineModelBuilder<...>::getNextIModel(0)
 1 uprops: &cDL["test1.owl",cp1,cn1,rp1,rn1,"D"](X)d(X) :- aux_r_10000000_e("test1.owl",cp1,cn1,rp1,rn1,"D",X).
 1 mbprops: currentmg =      null, needInput = 0, orefcount = 0, imodel =  0xdf0090, currentisuccessor = unset
 1 unit needs no input
 1 usage count of model builder before reset is 1
 1 ~EvalUnitModels()@0xde6c70
 1 ~EvalUnitModels()@0xde6c80
 1 ~EvalUnitModels()@0xde6c90
 1 resetting custom model generator provider
 1 resetting state
 1 resetting callbacks
 1 resetting modelBuilder
 1 resetting parser
 1 resetting evalgraph
 1 resetting compgraph
 1 Destructing component graph 0xde30b0
 1 resetting depgraph
 1 resetting edbList
 1 resetting inputProvider
 1 resetting aspsoftware
 1 resetting pluginData
 1 resetting pluginEnvironment
 1 resetting registry, usage count was 91 (it should be 2)
 1 resetting pluginAtoms
 1 resetting pluginContainer, usage count was 1 (it should be 1)
 1 unloading plugins
 1 about to unload loaded plugin 'hexagentplugin'
 1 about to unload loaded plugin 'dlvhex-dlliteplugin'
 1 unloading plugin 'dlvhex-pythonplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-functionplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-existsplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-weakconstraintplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-higherorderplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-strongnegationplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-aggregateplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-queryplugin[internal]' not necessary (NULL handle)
 1 unloading plugin 'dlvhex-manualevalheuristicsplugin[internal]' not necessary (NULL handle)
 1 done unloading
